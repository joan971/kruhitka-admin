{"version":3,"file":"main.js","mappings":"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","sources":["./apps/admin/src/app/app.component.ts","./apps/admin/src/app/app.component.html","./apps/admin/src/app/app.module.ts","./apps/admin/src/app/categories/categories-form/categories-form.component.ts","./apps/admin/src/app/categories/categories-form/categories-form.component.html","./apps/admin/src/app/categories/categories-list/categories-list.component.ts","./apps/admin/src/app/categories/categories-list/categories-list.component.html","./apps/admin/src/app/nx-welcome.component.ts","./apps/admin/src/app/pages/dashboard/dashboard.component.ts","./apps/admin/src/app/pages/dashboard/dashboard.component.html","./apps/admin/src/app/pages/orders/order.constants.ts","./apps/admin/src/app/pages/orders/orders-detail/orders-detail.component.ts","./apps/admin/src/app/pages/orders/orders-detail/orders-detail.component.html","./apps/admin/src/app/pages/orders/orders-list/orders-list.component.ts","./apps/admin/src/app/pages/orders/orders-list/orders-list.component.html","./apps/admin/src/app/pages/products/products-form/products-form.component.ts","./apps/admin/src/app/pages/products/products-form/products-form.component.html","./apps/admin/src/app/pages/products/products-list/products-list.component.ts","./apps/admin/src/app/pages/products/products-list/products-list.component.html","./apps/admin/src/app/pages/users/users-form/users-form.component.ts","./apps/admin/src/app/pages/users/users-form/users-form.component.html","./apps/admin/src/app/pages/users/users-list/users-list.component.ts","./apps/admin/src/app/pages/users/users-list/users-list.component.html","./apps/admin/src/app/shared/shell/shell.component.ts","./apps/admin/src/app/shared/shell/shell.component.html","./apps/admin/src/app/shared/sidebar/sidebar.component.ts","./apps/admin/src/app/shared/sidebar/sidebar.component.html","./apps/admin/src/main.ts","./environments/environment.ts","./libs/orders/src/index.ts","./libs/orders/src/lib/components/cart-icon/cart-icon.component.ts","./libs/orders/src/lib/components/cart-icon/cart-icon.component.html","./libs/orders/src/lib/components/order-summary/order-summary.component.ts","./libs/orders/src/lib/components/order-summary/order-summary.component.html","./libs/orders/src/lib/model/cart.ts","./libs/orders/src/lib/model/order-item.ts","./libs/orders/src/lib/model/order.ts","./libs/orders/src/lib/orders.module.ts","./libs/orders/src/lib/pages/about-us/about-us.component.ts","./libs/orders/src/lib/pages/about-us/about-us.component.html","./libs/orders/src/lib/pages/cart-page/cart-page.component.ts","./libs/orders/src/lib/pages/cart-page/cart-page.component.html","./libs/orders/src/lib/pages/checkout-page/checkout-page.component.ts","./libs/orders/src/lib/pages/checkout-page/checkout-page.component.html","./libs/orders/src/lib/pages/thank-you/thank-you.component.ts","./libs/orders/src/lib/pages/thank-you/thank-you.component.html","./libs/orders/src/lib/services/cart.service.ts","./libs/orders/src/lib/services/orders.service.ts","./libs/products/src/index.ts","./libs/products/src/lib/components/categories-banner/categories-banner.component.ts","./libs/products/src/lib/components/categories-banner/categories-banner.component.html","./libs/products/src/lib/components/featured-products/featured-products.component.ts","./libs/products/src/lib/components/featured-products/featured-products.component.html","./libs/products/src/lib/components/product-item/product-item.component.ts","./libs/products/src/lib/components/product-item/product-item.component.html","./libs/products/src/lib/components/products-search/products-search.component.ts","./libs/products/src/lib/models/category.ts","./libs/products/src/lib/models/product.ts","./libs/products/src/lib/pages/product-page/product-page.component.ts","./libs/products/src/lib/pages/product-page/product-page.component.html","./libs/products/src/lib/pages/products-list/products-list.component.ts","./libs/products/src/lib/pages/products-list/products-list.component.html","./libs/products/src/lib/products.module.ts","./libs/products/src/lib/services/categories.service.ts","./libs/products/src/lib/services/products.service.ts","./libs/ui/src/index.ts","./libs/ui/src/lib/banner/banner.component.ts","./libs/ui/src/lib/banner/banner.component.html","./libs/ui/src/lib/slider/slider.component.ts","./libs/ui/src/lib/slider/slider.component.html","./libs/ui/src/lib/ui-gallery/ui-gallery.component.ts","./libs/ui/src/lib/ui-gallery/ui-gallery.component.html","./libs/ui/src/lib/ui.module.ts","./libs/ui/src/lib/ui.ts","./libs/users/src/index.ts","./libs/users/src/lib/models/users.ts","./libs/users/src/lib/pages/login/login.component.ts","./libs/users/src/lib/pages/login/login.component.html","./libs/users/src/lib/pages/registration/registration.component.ts","./libs/users/src/lib/pages/registration/registration.component.html","./libs/users/src/lib/services/auth-guard.service.ts","./libs/users/src/lib/services/auth.service.ts","./libs/users/src/lib/services/jwt.interceptor.ts","./libs/users/src/lib/services/localstorage.service.ts","./libs/users/src/lib/services/users.service.ts","./libs/users/src/lib/state/users.actions.ts","./libs/users/src/lib/state/users.effects.ts","./libs/users/src/lib/state/users.facade.ts","./libs/users/src/lib/state/users.models.ts","./libs/users/src/lib/state/users.reducer.ts","./libs/users/src/lib/state/users.selectors.ts","./libs/users/src/lib/users.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'admin-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'admin';\n}\n","<router-outlet></router-outlet>\n","import { NgxStripeModule } from 'ngx-stripe';\nimport { CategoriesService } from './../../../../libs/products/src/lib/services/categories.service';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\n//Component module\nimport { AppComponent } from './app.component';\nimport { NxWelcomeComponent } from './nx-welcome.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { ShellComponent } from './shared/shell/shell.component';\nimport { SidebarComponent } from './shared/sidebar/sidebar.component';\nimport { CategoriesListComponent } from './categories/categories-list/categories-list.component';\nimport { ProductsListComponent } from './pages/products/products-list/products-list.component';\nimport { ProductsFormComponent } from './pages/products/products-form/products-form.component';\nimport { UsersListComponent } from './pages/users/users-list/users-list.component';\nimport { AuthGuard, JwtInterceptor, UsersModule } from '@redbits/users';\n\n//UX\nimport { CardModule } from 'primeng/card';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { ButtonModule } from 'primeng/button';\nimport { TableModule } from 'primeng/table';\nimport { CategoriesFormComponent } from './categories/categories-form/categories-form.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ToastModule } from 'primeng/toast';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { ColorPickerModule } from 'primeng/colorpicker';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { EditorModule } from 'primeng/editor';\nimport { TagModule } from 'primeng/tag';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { UsersFormComponent } from './pages/users/users-form/users-form.component';\nimport { OrdersListComponent } from './pages/orders/orders-list/orders-list.component';\nimport { OrdersDetailComponent } from './pages/orders/orders-detail/orders-detail.component';\nimport {FieldsetModule} from 'primeng/fieldset';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ShellComponent,\n    canActivate:[AuthGuard],\n    children: [\n      {\n        path: '',\n        component: DashboardComponent\n      },\n      {\n        path: 'categories',\n        component: CategoriesListComponent\n      },\n      {\n        path: 'categories/form',\n        component: CategoriesFormComponent\n      },\n      {\n        path: 'categories/form/:id',\n        component: CategoriesFormComponent\n      },\n      {\n        path: 'products',\n        component: ProductsListComponent\n      },\n      {\n        path: 'products/form',\n        component: ProductsFormComponent\n      },\n      {\n        path: 'products/form/:id',\n        component: ProductsFormComponent\n      },\n      {\n        path: 'users',\n        component: UsersListComponent\n      },\n      {\n        path: 'users/form',\n        component: UsersFormComponent\n      },\n       {\n       path: 'users/form/:id',\n      component: UsersFormComponent\n      },\n      {\n        path: 'orders',\n        component: OrdersListComponent\n      },\n      {\n        path: 'orders/:id',\n        component: OrdersDetailComponent\n      }\n    ]\n  },\n];\n\n@NgModule({\n  declarations: [AppComponent, NxWelcomeComponent, DashboardComponent,\n    ShellComponent, SidebarComponent, CategoriesListComponent, CategoriesFormComponent, ProductsListComponent,\n    ProductsFormComponent, UsersListComponent, UsersFormComponent, OrdersListComponent, OrdersDetailComponent,],\n\n\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes, { initialNavigation: 'enabledBlocking' }),\n    CardModule,\n    ToolbarModule,\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    ButtonModule,\n    TableModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ToastModule,\n    ColorPickerModule,\n    ConfirmDialogModule,\n    InputNumberModule,\n    InputTextareaModule,\n    InputSwitchModule,\n    DropdownModule,\n    EditorModule,\n    TagModule,\n    UsersModule,\n    FieldsetModule,\n    NgxStripeModule.forRoot('pk_test_51IUDnGKAfI2qPdhfXRsBJan4VHKdsG6Ej73au6i5GSC8hODDZJvNIhPxKoX7GJng1QwVsRhYZDCPkjEQ3AcrXAfN00p0ww86kB'),\n    InputTextModule,\n    InputMaskModule\n  ],\n\n  //always imports les services dans le provider\n  providers: [CategoriesService, MessageService, ConfirmationService,\n{ provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CategoriesService, Category } from '@redbits/products';\nimport { MessageService } from 'primeng/api';\nimport { timer } from 'rxjs';\n\n\n@Component({\n  selector: 'admin-categories-form',\n  templateUrl: './categories-form.component.html',\n  styles: [\n  ]\n})\nexport class CategoriesFormComponent implements OnInit {\n\n  form:any = FormGroup;\n  isSubmitted = false;\n  editMode = false;\n  currentCategoryId: string | undefined;\n\n  constructor(\n    private messageService: MessageService,\n    private formBuilder: FormBuilder,\n    private categoriesService: CategoriesService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      icon: ['', Validators.required],\n      color: ['#fff']\n    });\n\n    this._checkEditMode();\n  }\n\n  //method pour soumettre les inputs de notre form category\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    //consommation du service create category\n    const category: Category = {\n      id: this.currentCategoryId,\n      name: this.form.controls.name.value,\n      icon: this.form.controls.icon.value,\n      color: this.form.controls.color.value,\n    };\n    if(this.editMode){\n      this._updateCategory(category)\n    }else{\n      this._addCategory(category)\n    }\n\n  }\n\n  onCancel() {\n    this.location.back();\n  }\n\n  private _addCategory(category: Category) {\n    this.categoriesService.createCategory(category).subscribe(\n      (category: Category) => {\n      this.messageService.add({ severity: 'success', summary: 'Success', detail: `Category ${category.name} is created successfully!` });\n\n      //to go back to the categoryList after confirmation\n      timer(2000).toPromise().then(() => {\n        this.location.back();\n      })\n    },\n      () => {\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Category is not created.' });\n      });\n  }\n\n  private _updateCategory(category: Category) {\n    this.categoriesService.updateCategory(category).subscribe(\n      () => {\n      this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Category is updated successfully!' });\n\n      //to go back to the categoryList after confirmation\n      timer(2000).toPromise().then(() => {\n        this.location.back();\n      })\n    },\n      () => {\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Category is not updated.' });\n      });\n  }\n\n\n  //To make sure that we are updating the category and not creating a new one\n  private _checkEditMode() {\n    this.route.params.subscribe((params) => {\n      if(params['id']) {\n        this.editMode = true;\n        this.currentCategoryId = params['id'];\n        this.categoriesService.getCategory(params['id']).subscribe(category => {\n          this.form.controls.name.setValue(category.name);\n          this.form.controls.icon.setValue(category.icon);\n        })\n      }\n    })\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card [header]=\"editMode ? 'Editmode' : 'Add Category'\" subheader=\"You can add or edit categories here\" styleClass=\"text-center\">\n    <div class=\"p-grid mb-5\">\n      <div class=\"p-col-12 \">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-right\"></div>\n          <div class=\"p-toolbar-group-right\">\n            <p-button [label]=\"editMode ? 'Update': 'Create'\" icon=\"pi pi-plus\" (click)=\"onSubmit()\"></p-button>\n            <p-button styleClass=\"p-button-secondary ml-2\" label=\"Cancel\" icon=\"pi pi-arrow-circle-left\" (click)=\"onCancel()\"></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"col-12 \">\n        <form [formGroup]=\"form\">\n          <div class=\"p-fluid formgrid grid\">\n            <div class=\"field col-12 md:col-4\">\n              <label for=\"name\">Name</label>\n              <input formControlName=\"name\" id=\"name\" type=\"text\" pInputText />\n              <small *ngIf=\"form.controls.name.invalid && isSubmitted\" class=\"p-error\">Name is required.</small>\n            </div>\n            <div class=\"field col-12 md:col-4\">\n              <label for=\"icon\">Icon</label>\n              <input formControlName=\"icon\" id=\"icon\" type=\"text\" pInputText />\n              <small *ngIf=\"form.controls.icon.invalid && isSubmitted\" class=\"p-error\">Icon is required.</small>\n            </div>\n            <div class=\"field col-12 md:col-4\">\n              <label for=\"color\">Color</label><br>\n              <p-colorPicker formControlName=\"color\"></p-colorPicker>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </p-card>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoriesService, Category } from '@redbits/products';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { Subject, takeUntil } from 'rxjs';\n\n\n@Component({\n  selector: 'admin-categories-list',\n  templateUrl: './categories-list.component.html',\n  styles: [\n  ]\n})\nexport class CategoriesListComponent implements OnInit, OnDestroy{\n\n  categories: Category[] = [];\n  endSubs$: Subject<any> = new Subject();\n\n  constructor(\n    private categoriesService: CategoriesService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this._getCategory();\n  }\n\n  ngOnDestroy() {\n    \n    this.endSubs$.complete();\n  }\n\n  //method to delete a category\n  deleteCategory(categoryId: string) {\n    this.confirmationService.confirm({\n      message: 'Do you want to delete this category?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.categoriesService.deleteCategory(categoryId).subscribe(() => {\n          this._getCategory();\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: 'Category is deleted successfully!'\n          });\n        },\n          () => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Error',\n              detail: 'Category is not deleted.'\n            });\n          });\n      },\n    });\n  }\n\n  //update category\n  updateCategory(categoryid: string) {\n    this.router.navigateByUrl(`categories/form/${categoryid}`);\n  }\n  //to have the auto refresh after delete category\n  private _getCategory() {\n    this.categoriesService.getCategories().pipe(takeUntil(this.endSubs$)).subscribe((cats) => {\n      this.categories = cats;\n    })\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card header=\"Categories\" subheader=\"List of all Categories\" styleClass=\"text-center\">\n    <div class=\"p-grid\">\n      <div class=\"col-12 \">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\">\n            <p-button label=\"New\" icon=\"pi pi-plus\" routerLink=\"form\" ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"grid \">\n      <div class=\"col-12\">\n        <p-table [value]=\"categories\" styleClass=\"p-datatable-gridlines\" responsiveLayout=\"scroll\">\n          <ng-template pTemplate=\"header\">\n              <tr>\n                  <th pSortableColumn=\"name\">Name<p-sortIcon field=\"name\"></p-sortIcon></th>\n                  <th>Icon</th>\n                  <th>Color</th>\n                  <th>Options</th>\n              </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-category>\n              <tr>\n                  <td>{{category.name}}</td>\n                  <td><i style=\"font-size: 2rem\" class=\"pi\" [ngClass]=\"'pi-' + category.icon\"></i> </td>\n                  <td>{{category.color}}</td>\n                  <td>\n                    <p-button (click)=\"deleteCategory (category.id)\"\n                    styleClass=\"p-button-danger ml-2\" icon=\"pi pi-trash\"></p-button>\n                    <p-button (click)=\"updateCategory (category.id)\"\n                    styleClass=\"p-button-info ml-3\" icon=\"pi pi-pencil\"></p-button>\n                  </td>\n              </tr>\n          </ng-template>\n      </p-table>\n      </div>\n    </div>\n  </p-card>\n</div>\n<p-confirmDialog [breakpoints]=\"{'960px': '75vw', '640px': '100vw'}\"  [style]=\"{width: '50vw'}\" rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n/* eslint-disable */\n\n@Component({\n  selector: 'redbits-nx-welcome',\n  template: ``,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NxWelcomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OrdersService } from '@redbits/orders';\nimport { ProductsService } from '@redbits/products';\nimport { UsersService } from '@redbits/users';\n\nimport { combineLatest } from 'rxjs';\n\n@Component({\n  selector: 'admin-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  statistics: any = [];\n\n  constructor(\n    private userService: UsersService,\n    private productService: ProductsService,\n    private ordersService: OrdersService\n  ) { }\n\n  ngOnInit(): void {\n    combineLatest([\n      this.ordersService.getOrdersCount(),\n      this.productService.getProductsCount(),\n      this.userService.getUsersCount(),\n      this.ordersService.getTotalSales()\n    ]).subscribe((values) => {\n      this.statistics = values;\n    });\n  }\n\n}\n","<div class=\"admin-page\" >\n  <p-card [header]=\"'Dashboard'\" subheader=\"Lastest Updates \" >\n    <div class=\"grid\">\n      <div class=\"col-12 lg:col-4\">\n        <p-card styleClass=\"d-orders\">\n          <div class=\"d-item\">\n            <div>\n              <i class=\"pi pi-shopping-cart\"></i><br>\n              <span class=\"name\">Orders</span>\n            </div>\n              <span class=\"number\">{{ statistics[0] }}</span>\n          </div>\n        </p-card>\n      </div>\n      <div class=\"col-12 lg:col-4\">\n        <p-card styleClass=\"d-products\">\n          <div class=\"d-item\">\n            <div>\n              <i class=\"pi pi-briefcase\"></i><br>\n              <span class=\"name\">Products</span>\n            </div>\n            <span class=\"number\">{{ statistics[1] }}</span>\n          </div>\n        </p-card>\n      </div>\n      <div class=\"col-12 lg:col-4\">\n        <p-card styleClass=\"d-users\">\n          <div class=\"d-item\">\n            <div>\n              <i class=\"pi pi-users\"></i><br>\n              <span class=\"name\">Users</span>\n            </div>\n            <span class=\"number\">{{ statistics[2] }}</span>\n          </div>\n        </p-card>\n      </div>\n     \n    </div>\n  </p-card>\n</div>\n","export const ORDER_STATUS = {\r\n  Pending: {\r\n    label: 'Pending',\r\n    color: 'Primary'\r\n  },\r\n  Processed: {\r\n    label: 'Processed',\r\n    color: 'warning'\r\n  },\r\n  Shipped: {\r\n    label: 'Shipped',\r\n    color: 'warning'\r\n  },\r\n  Delivered: {\r\n    label: 'Delivered',\r\n    color: 'success'\r\n  },\r\n  Failed: {\r\n    label: 'Failed',\r\n    color: 'danger'\r\n  },\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Order, OrdersService } from '@redbits/orders';\nimport { MessageService } from 'primeng/api';\nimport { ORDER_STATUS } from '../order.constants';\n\n\n\n\n@Component({\n  selector: 'admin-orders-detail',\n  templateUrl: './orders-detail.component.html',\n  styles: [\n  ]\n})\nexport class OrdersDetailComponent implements OnInit {\n\n\n  order: any = Order;\n  orderStatuses = [];\n  selectedStatus: any;\n\n\n\n  constructor(\n    private ordersService: OrdersService,\n    private messageService: MessageService,\n    private route: ActivatedRoute,\n\n  ) { }\n\n  ngOnInit(): void {\n    this._mapOrderStatus();\n    this._getOrder();\n  }\n\n  private _mapOrderStatus() {\n    this.orderStatuses = Object.keys(ORDER_STATUS).map((key) => {\n      return {\n        id: key,\n        name: ORDER_STATUS[key].label\n      };\n    });\n  }\n\n  _getOrder() {\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.ordersService.getOrder(params.id).subscribe((order) => {\n          this.order = order;\n          this.selectedStatus = order.status;\n        })\n      }\n    })\n  }\n\n  onStatusChange(event) {\n    this.ordersService.updateOrder({ status: event.value }, this.order.id).subscribe(\n      () => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Order is updated!'\n        });\n      },\n      () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Order is not updated!'\n        });\n      }\n    );\n  }\n\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\" *ngIf=\"order\">\n  <p-card [header]=\"'View Order'\" subheader=\"You can edit order status here\" styleClass=\"text-center\">\n    <p-fieldset legend=\"Order Details\" styleClass=\"mb-5\" [toggleable]=\"true\">\n      <div class=\"grid  mb-5\">\n        <div class=\"col-12 md:col-4\">\n          <h4>Order Id</h4>\n          <p>{{order.id}}</p>\n        </div>\n        <div class=\"col-12 md:col-4\">\n          <h4>Order Date</h4>\n          <p>{{order.dateOrdered | date:'short'}}</p>\n        </div>\n        <div class=\"col-12 md:col-4\">\n          <h4>Order Status</h4>\n          <p-dropdown\n            [options]=\"orderStatuses\"\n            optionLabel=\"name\"\n            optionValue=\"id\"\n            (onChange)=\"onStatusChange($event)\"\n            [(ngModel)]=\"selectedStatus\"\n          ></p-dropdown>\n        </div>\n        <div class=\"col-12 md:col-4\">\n          <h4>Order Total Price</h4>\n          <p>{{order.totalPrice | currency}}</p>\n        </div>\n      </div>\n    </p-fieldset>\n    <p-fieldset legend=\"Order Items\" styleClass=\"mb-5\" [toggleable]=\"true\">\n      <div class=\"grid mb-5\">\n        <div class=\"col-12 md:col-2\">\n          <h4>Name</h4>\n        </div>\n        <div class=\"col-12 md:col-2\">\n          <h4>Brand</h4>\n        </div>\n        <div class=\"col-12 md:col-2\">\n          <h4>Category</h4>\n        </div>\n        <div class=\"col-12 md:col-2\">\n          <h4>Price</h4>\n        </div>\n        <div class=\"col-12 md:col-2\">\n          <h4>Quantity</h4>\n        </div>\n        <div class=\"col-12 md:col-2\">\n          <h4>Subtotal</h4>\n        </div>\n      </div>\n      <div class=\"grid mb-5\" *ngFor=\"let orderItem of order.orderItems\">\n        <div class=\"col-12 md:col-2\">{{orderItem.product.name}}</div>\n        <div class=\"col-12 md:col-2\">{{orderItem.product.brand}}</div>\n        <div class=\"col-12 md:col-2\">{{orderItem.product.category.name}}</div>\n        <div class=\"col-12 md:col-2\">{{orderItem.product.price | currency}}</div>\n        <div class=\"col-12 md:col-2\">{{orderItem.quantity}}</div>\n        <div class=\"col-12 md:col-2\">{{orderItem.product.price * orderItem.quantity | currency}}</div>\n      </div>\n      <div class=\"grid\" style=\"color: rgb(0, 119, 255)\">\n        <div class=\"col-2 col-offset-8\">\n          <h4>Total Price</h4>\n        </div>\n        <div class=\"col-12 md:col-2\">\n          <h5>{{order.totalPrice | currency}}</h5>\n        </div>\n      </div>\n    </p-fieldset>\n    <p-fieldset legend=\"Order Address\" styleClass=\"mb-4\" [toggleable]=\"true\">\n      <div class=\"grid\">\n        <div class=\"col-12 md:col-4\">\n          <h4>Customer</h4>\n\n          <p>{{order.user.name}}</p>\n        </div>\n        <div class=\"col-12 md:col-4\">\n          <h4>Order Address</h4>\n          <p>\n            {{order.shippingAddress1}}<br>\n            {{order.shippingAddress2}}<br>\n            {{order.zip}} {{ order.city}}<br>\n            {{order.country}}\n          </p>\n        </div>\n        <div class=\"col-12 md:col-4\">\n          <h4>Contact Info</h4>\n          <p>{{order.phone}}</p>\n        </div>\n      </div>\n    </p-fieldset>\n  </p-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Order, OrdersService } from '@redbits/orders';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { ORDER_STATUS } from '../order.constants';\n\n\n\n\n@Component({\n  selector: 'admin-orders-list',\n  templateUrl: './orders-list.component.html',\n  styles: []\n})\nexport class OrdersListComponent implements OnInit {\n  orders: Order[] = [];\n  orderStatus = ORDER_STATUS;\n  constructor(\n    private ordersService: OrdersService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this._getOrders();\n  }\n\n  _getOrders() {\n    this.ordersService.getOrders().subscribe((orders) => {\n      this.orders = orders;\n    });\n  }\n\n  showOrder(orderId) {\n    this.router.navigateByUrl(`orders/${orderId}`);\n  }\n\n  deleteOrder(orderId: string) {\n    this.confirmationService.confirm({\n      message: 'Do you want to Delete this Order?',\n      header: 'Delete Order',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.ordersService.deleteOrder(orderId).subscribe(\n          () => {\n            this._getOrders();\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Success',\n              detail: 'Order is deleted!'\n            });\n          },\n          () => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Error',\n              detail: 'Order is not deleted!'\n            });\n          }\n        );\n      }\n    });\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card header=\"Orders\" subheader=\"List of all Orders\" styleClass=\"text-center\">\n    <div class=\"grid \">\n      <div class=\"col-12\">\n        <p-table [value]=\"orders\" styleClass=\"p-datatable-gridlines\" responsiveLayout=\"scroll\">\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th pSortableColumn=\"name\">User<p-sortIcon field=\"user\"></p-sortIcon>\n              </th>\n              <th pSortableColumn=\"totalPrice\">Total Price<p-sortIcon field=\"totalPrice\"></p-sortIcon>\n              </th>\n              <th pSortableColumn=\"dateOrdered\">Date Ordered<p-sortIcon field=\"dateOrdered\"></p-sortIcon>\n              </th>\n              <th pSortableColumn=\"status\">Status<p-sortIcon field=\"status\"></p-sortIcon>\n              </th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-order>\n            <tr>\n              <td>{{order.user.name}}</td>\n              <td>{{order.totalPrice}}</td>\n              <td>{{order.dateOrdered | date: 'short'}}</td>\n              <td><p-tag [value]=\"orderStatus[order.status].label\" [severity]=\"orderStatus[order.status].color\"></p-tag></td>\n              <td>\n                <p-button  styleClass=\"p-button-danger ml-2\" icon=\"pi pi-trash\" (click)=\" deleteOrder(order.id)\">\n                </p-button>\n                <p-button  styleClass=\"p-button-info ml-3\" icon=\"pi pi-eye\" (click)=\" showOrder(order.id)\"></p-button>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-card>\n</div>\n<p-confirmDialog [breakpoints]=\"{'960px': '75vw', '640px': '100vw'}\" [style]=\"{width: '50vw'}\"\n  rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\n","import { CategoriesService, Product, ProductsService } from '@redbits/products';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { timer } from 'rxjs';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'admin-products-form',\n  templateUrl: './products-form.component.html',\n  styles: [\n  ]\n})\nexport class ProductsFormComponent implements OnInit {\n\n  editmode = false;\n  form: any = FormGroup;\n  isSubmitted = false;\n  categories: any = [];\n  imageDisplay: string | ArrayBuffer | undefined;\n  currentProductId!: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private categoriesService: CategoriesService,\n    private productsService: ProductsService,\n    private messageService: MessageService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this._initForm();\n    this._getCategories();\n    this._checkEditMode();\n\n  }\n\n  private _initForm() {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      brand: ['', Validators.required],\n      price: ['', Validators.required],\n      category: ['', Validators.required],\n      countInStock: ['', Validators.required],\n      description: ['',],\n      richDescription: [],\n      image: ['', Validators.required],\n      isFeatured: [false]\n    });\n  }\n\n  //to send the data dynamically (categories for the dropdown)\n  private _getCategories(): void {\n    this.categoriesService.getCategories().subscribe((categories) => {\n      this.categories = categories;\n    })\n  }\n\n  private _addProduct(productData: FormData) {\n    this.productsService.createProduct(productData).subscribe(\n      (product: Product) => {\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: `Product ${product.name} is created successfully!` });\n\n        //to go back to the categoryList after confirmation\n        timer(2000).toPromise().then(() => {\n          this.location.back();\n        })\n      },\n      () => {\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Product is not created.' });\n      });\n  }\n\n  get productForm() {\n    return this.form.controls;\n  }\n\n  //Private method we use to update our product by id\n  private _updateProduct(productFormData: FormData) {\n    this.productsService.updateProduct(productFormData, this.currentProductId).subscribe(\n      () => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Product is updated!'\n        });\n        timer(2000)\n          .toPromise()\n          .then(() => {\n            this.location.back();\n          });\n      },\n      () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Product is not updated!'\n        });\n      }\n    );\n  }\n\n  private _checkEditMode() {\n    this.route.params.subscribe((params) => {\n      if (params['id']) {\n        this.editmode = true;\n        this.currentProductId = params['id'];\n        this.productsService.getProduct(params['id']).subscribe(product => {\n          this.form.controls.name.setValue(product.name);\n          this.form.controls.category.setValue(product.category);\n          this.form.controls.brand.setValue(product.brand);\n          this.form.controls.price.setValue(product.price);\n          this.form.controls.countInStock.setValue(product.countInStock);\n          this.form.controls.isFeatured.setValue(product.isFeatured);\n          this.form.controls.description.setValue(product.description);\n          this.form.controls.richDescription.setValue(product.richDescription);\n          this.imageDisplay = product.image;\n          this.form.controls.image.setValidators([]);\n          this.form.controls.image.updateValueAndValidity();\n        })\n      }\n    })\n  }\n\n  //method to submit and cancel the add product\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    const productFormData = new FormData();\n\n    Object.keys(this.productForm).map((key) => {\n      console.log(key);\n      console.log(this.productForm[key].value);\n      productFormData.append(key, this.productForm[key].value);\n    });\n    if(this.editmode){\n      this._updateProduct(productFormData)\n    }else{\n      this._addProduct(productFormData)\n    }\n    // productFormData.append('name', this.productForm.name.value);\n  }\n  onCancel() {\n    this.location.back();\n  }\n  //method to upload our images\n  onImageUpload(event: any) {\n    const file = event.target.files[0];\n    if (file) {\n      this.form.patchValue({ image: file });\n      this.form.get('image')?.updateValueAndValidity();\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        this.imageDisplay = fileReader.result as string;\n      }\n      fileReader.readAsDataURL(file);\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\n\nfunction onImageUpload(event: Event | undefined) {\n  throw new Error('Function not implemented.');\n}\n\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card [header]=\"editmode ? 'EditMode' : 'Add Product'\" subheader=\"You can add or edit products here\"\n    styleClass=\"text-center\">\n    <div class=\"p-grid mb-5\">\n      <div class=\"p-col-12 \">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-right\"></div>\n          <div class=\"p-toolbar-group-right\">\n            <p-button [label]=\"editmode ? 'Update': 'Create'\" icon=\"pi pi-plus\" (click)=\"onSubmit()\"></p-button>\n            <p-button styleClass=\"p-button-secondary ml-2\" label=\"Cancel\" icon=\"pi pi-arrow-circle-left\"\n            (click)=\"onCancel()\"></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"col-12 \">\n        <form [formGroup]=\"form\">\n          <div class=\"p-fluid formgrid grid\">\n            <div class=\"field col-12 md:col-4\">\n              <label for=\"name\">Name</label>\n              <input formControlName=\"name\" id=\"name\" type=\"text\" pInputText />\n              <small *ngIf=\"productForm.name.invalid && isSubmitted\" class=\"p-error\">Name is required.</small>\n            </div>\n            <div class=\"field col-12 md:col-4\">\n              <label for=\"icon\">Brand</label>\n              <input formControlName=\"brand\" id=\"brand\" type=\"text\" pInputText />\n              <small *ngIf=\"productForm.brand.invalid && isSubmitted\" class=\"p-error\">Brand is required.</small>\n            </div>\n            <div class=\"field col-12 md:col-4\">\n              <label for=\"price\">Price</label><br>\n              <p-inputNumber formControlName=\"price\" mode=\"decimal\" inputId=\"price\" [useGrouping]=\"false\">\n              </p-inputNumber>\n              <small *ngIf=\"productForm.price.invalid && isSubmitted\" class=\"p-error\">Price is required.</small>\n            </div>\n          </div>\n          <div class=\"p-fluid formgrid grid\">\n            <div class=\"field col-12 md:col-4\">\n              <label for=\"countInStock\">CountInStock</label><br>\n              <p-inputNumber formControlName=\"countInStock\" mode=\"decimal\" inputId=\"countInStock\" [useGrouping]=\"false\">\n              </p-inputNumber>\n              <small *ngIf=\"productForm.countInStock.invalid && isSubmitted\" class=\"p-error\">CountInStock is required.</small>\n            </div>\n            <div class=\"field col-12 md:col-4\">\n              <label for=\"category\">Category</label><br>\n              <p-dropdown [options]=\"categories\" formControlName=\"category\" optionLabel=\"name\" optionValue=\"id\"\n                [filter]=\"true\" filterBy=\"name\" [showClear]=\"true\" placeholder=\"Select a Category\"></p-dropdown>\n                <small *ngIf=\"productForm.category.invalid && isSubmitted\" class=\"p-error\">Category is required.</small>\n            </div>\n            <div class=\"field col-12 md:col-4\">\n              <label for=\"isFeatured\">Is featured</label><br>\n              <p-inputSwitch formControlName=\"isFeatured\"></p-inputSwitch>\n            </div>\n            <div class=\"field col-12 md:col-12\">\n              <label for=\"description\">Description</label><br>\n              <textarea rows=\"5\" cols=\"30\" pInputTextarea></textarea>\n              <small *ngIf=\"productForm.description.invalid && isSubmitted\" class=\"p-error\">Description is required.</small>\n            </div>\n            <div class=\"field col-12 md:col-12\">\n              <label for=\"richdescription\">Product Details</label><br>\n              <p-editor formControlName=\"richDescription\" [style]=\"{'height':'320px'}\"></p-editor>\n            </div>\n            <div class=\"field col-12 md:col-12\">\n              <label for=\"name\">Main Image</label>\n              <input type=\"file\" class=\"p-inputtext\" accept=\"image/*\" (change)=\"onImageUpload($event)\" />\n              <div>\n                <small *ngIf=\"productForm.image.invalid && isSubmitted\" class=\"p-error\">Image is required.</small>\n                <div class=\"p-col-12 md:col-12 mt-4\">\n                  <img style=\"width:auto\" [src]=\"imageDisplay\" alt=\"\">\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </p-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProductsService } from '@redbits/products';\nimport { ConfirmationService, MessageService } from 'primeng/api';\n\n\n@Component({\n  selector: 'admin-products-list',\n  templateUrl: './products-list.component.html',\n  styles: [\n  ]\n})\nexport class ProductsListComponent implements OnInit {\n\n  products: any = [];\n\n\n\n  constructor(\n    private productsService: ProductsService,\n    private router: Router,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n  ) { }\n\n  ngOnInit(): void {\n    this._getProducts();\n\n  }\n\n  private _getProducts() {\n    this.productsService.getProducts().subscribe((products) => {\n      this.products = products;\n    })\n  }\n\n  updateProduct(productid: string) {\n    this.router.navigateByUrl(`/products/form/${productid}`)\n  }\n\n  //method to delete a category\n  deleteProduct(productid: string) {\n    this.confirmationService.confirm({\n      message: 'Do you want to delete this product?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.productsService.deleteProduct(productid).subscribe(() => {\n          this._getProducts();\n          this.messageService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: 'Product is deleted successfully!'\n          });\n        },\n          () => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Error',\n              detail: 'Product is not deleted.'\n            });\n          });\n      },\n    });\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card header=\"Products\" subheader=\"List of all Products\" styleClass=\"text-center\">\n    <div class=\"p-grid\">\n      <div class=\"col-12 \">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\">\n            <p-button label=\"New\" icon=\"pi pi-plus\" routerLink=\"form\"></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"col-12\">\n        <p-table [paginator]=\"true\" [rows]=\"10\" [value]=\"products\" styleClass=\"p-datatable-gridlines\"\n          responsiveLayout=\"scroll\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n          [rowsPerPageOptions]=\"[10,25,50]\">\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th pSortableColumn=\"name\">Name<p-sortIcon field=\"name\"></p-sortIcon>\n              </th>\n              <th>Image</th>\n              <th pSortableColumn=\"price\">Price<p-sortIcon field=\"price\"></p-sortIcon>\n              </th>\n              <th pSortableColumn=\"stock\">Stock<p-sortIcon field=\"stock\"></p-sortIcon>\n              </th>\n              <th pSortableColumn=\"category\">Category<p-sortIcon field=\"category\"></p-sortIcon>\n              </th>\n              <th pSortableColumn=\"created\">Created at<p-sortIcon field=\"created\"></p-sortIcon>\n              </th>\n              <th>Options</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-product>\n            <tr>\n              <td>{{product.name}}</td>\n              <td><img [src]=\"product.image\" style=\"width: 70%; height: 300px \" alt=\"\" /></td>\n              <td>{{product.price}}</td>\n              <td>{{product.countInStock}}</td>\n              <td>{{product.category.name}}</td>\n              <td>{{product.dateCreated | date}}</td>\n              <td>\n                <p-button (click)=\"deleteProduct(product.id)\" styleClass=\"p-button-danger ml-2\" icon=\"pi pi-trash\"></p-button>\n                <p-button (click)=\"updateProduct (product.id)\" styleClass=\"p-button-info ml-3\" icon=\"pi pi-pencil\">\n                </p-button>\n              </td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-card>\n</div>\n<p-confirmDialog [breakpoints]=\"{'960px': '75vw', '640px': '100vw'}\" [style]=\"{width: '50vw'}\"\n  rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { MessageService } from 'primeng/api';\nimport { ActivatedRoute } from '@angular/router';\nimport { UsersService } from './../../../../../../../libs/users/src/lib/services/users.service';\nimport { User } from './../../../../../../../libs/users/src/lib/models/users';\nimport { timer } from 'rxjs';\n\n@Component({\n  selector: 'admin-users-form',\n  templateUrl: './users-form.component.html',\n  styles: [\n  ]\n})\nexport class UsersFormComponent implements OnInit {\n\n\n  form: any = FormGroup;\n  isSubmitted = false;\n  editmode = false;\n  currentUserId: string | undefined;\n\n  constructor(\n    private messageService: MessageService,\n    private formBuilder: FormBuilder,\n    private usersService: UsersService,\n    private location: Location,\n    private route: ActivatedRoute\n    ) { }\n\n  ngOnInit(): void {\n    this._initUserForm();\n    this._checkEditMode();\n  }\n  private _initUserForm() {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      password: ['', Validators.required],\n      email: ['', Validators.required],\n      phone: ['', Validators.required],\n      isAdmin: [false],\n      street: [''],\n      apartment: [''],\n      zip: [''],\n      city: [''],\n      country: ['']\n    });\n  }\n\n  private _addUser(user: User) {\n    this.usersService.createUser(user).subscribe(\n      (user: User) => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: `User ${user.name} is created!`\n        });\n        timer(2000)\n          .toPromise()\n          .then(() => {\n            this.location.back();\n          });\n      },\n      () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'User is not created!'\n        });\n      }\n    );\n  }\n\n  private _updateUser(user: User) {\n    this.usersService.updateUser(user).subscribe(\n      () => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'User is updated!'\n        });\n        timer(2000)\n          .toPromise()\n          .then(() => {\n            this.location.back();\n          });\n      },\n      () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'User is not updated!'\n        });\n      }\n    );\n  }\n\n  private _checkEditMode() {\n    this.route.params.subscribe((params) => {\n      if (params['id']) {\n        this.editmode = true;\n        this.currentUserId = params['id'];\n        this.usersService.getUser(params['id']).subscribe((user) => {\n          this.form.controls.name.setValue(user.name);\n          this.form.controls.email.setValue(user.email);\n          this.form.controls.phone.setValue(user.phone);\n          this.form.controls.isAdmin.setValue(user.isAdmin);\n          this.form.controls.street.setValue(user.street);\n          this.form.controls.apartment.setValue(user.apartment);\n          this.form.controls.zip.setValue(user.zip);\n          this.form.controls.city.setValue(user.city);\n          this.form.controls.country.setValue(user.country);\n\n          this.form.controls.password.setValidators([]);\n          this.form.controls.password.updateValueAndValidity();\n        });\n      }\n    });\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    const user: User = {\n      id: this.currentUserId,\n      name: this.form.controls.name.value,\n      email: this.form.controls.email.value,\n      password: this.userForm.password.value,\n      phone: this.form.controls.phone.value,\n      isAdmin: this.form.controls.isAdmin.value,\n      street: this.form.controls.street.value,\n      apartment: this.form.controls.apartment.value,\n      zip: this.form.controls.zip.value,\n      city: this.form.controls.city.value,\n      country: this.form.controls.country.value\n    };\n    if (this.editmode) {\n      this._updateUser(user);\n    } else {\n      this._addUser(user);\n    }\n  }\n\n  onCancle() {\n    this.location.back();\n  }\n  get userForm() {\n    return this.form.controls;\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card [header]=\"editmode ? 'EditMode' : 'Add User'\" subheader=\"You can add or edit users here\"\n    styleClass=\"text-center\">\n    <div class=\"p-grid mb-5\">\n\n    </div>\n    <div class=\"p-grid\">\n      <div class=\"col-12 \">\n        <form [formGroup]=\"form\">\n          <div class=\"p-fluid formgrid grid\">\n            <div class=\"field col-12 md:col-4\">\n              <div class=\"p-inputgroup\">\n                <input formControlName=\"name\" type=\"text\" pInputText placeholder=\"Name\">\n                <small *ngIf=\"form.controls.name.invalid && isSubmitted\" class=\"p-error\">Name is required.</small>\n              </div>\n            </div>\n\n            <div class=\"field col-12 md:col-4\">\n              <div class=\"p-inputgroup\">\n                <input formControlName=\"email\" type=\"text\" pInputText placeholder=\"Email\">\n                <small *ngIf=\"form.controls.email.invalid && isSubmitted\" class=\"p-error\"><span\n                    *ngIf=\"form.controls.email.errors.required\">email is required</span>Email is required.</small>\n              </div>\n            </div>\n\n            <div class=\"field col-12 md:col-4\">\n              <div class=\"p-inputgroup\">\n                <input formControlName=\"password\" type=\"text\" pInputText placeholder=\"Password\">\n              </div>\n            </div>\n\n            <div class=\"field col-12 md:col-4\">\n              <div class=\"p-inputgroup\">\n                <input formControlName=\"phone\" type=\"text\" pInputText placeholder=\"Phone\">\n                <small *ngIf=\"form.controls.phone.invalid && isSubmitted\" class=\"p-error\">Phone is required.</small>\n              </div>\n            </div>\n\n            <div class=\"field col-12 md:col-8\">\n              <div class=\"p-inputgroup\">\n                <label class=\"switch\">\n                  <input formControlName=\"isAdmin\" type=\"checkbox\">\n                  <span class=\"slider\"></span>\n                </label>\n              </div>\n            </div>\n\n            <div class=\"field col-12 md:col-4\">\n              <div class=\"p-inputgroup\">\n                <input formControlName=\"street\" type=\"text\" pInputText placeholder=\"Street\">\n              </div>\n            </div>\n\n            <div class=\"field col-12 md:col-4\">\n              <div class=\"p-inputgroup\">\n                <input formControlName=\"apartment\" type=\"text\" pInputText placeholder=\"Apartment\">\n              </div>\n            </div>\n\n            <div class=\"field col-12 md:col-4\">\n              <div class=\"p-inputgroup\">\n                <input formControlName=\"zip\" type=\"text\" pInputText placeholder=\"Zip Code\">\n              </div>\n            </div>\n\n            <div class=\"field col-12 md:col-4\">\n              <div class=\"p-inputgroup\">\n                <input formControlName=\"city\" type=\"text\" pInputText placeholder=\"City\">\n              </div>\n            </div>\n\n            <div class=\"field col-12 md:col-4\">\n              <div class=\"p-inputgroup\">\n                <input formControlName=\"country\" type=\"text\" pInputText placeholder=\"Country\">\n              </div>\n            </div>\n\n          </div>\n          <div class=\"p-col-12 \">\n            <div class=\"btn\">\n              <button class=\"btn1\" (click)=\"onSubmit()\"> Create</button>\n              <button class=\"btn2\" (click)=\"onCancle()\"> Cancel</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </p-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UsersService } from '@redbits/users';\nimport { ConfirmationService } from 'primeng/api';\nimport { MessageService } from 'primeng/api';\n\n\n@Component({\n  selector: 'admin-users-list',\n  templateUrl: './users-list.component.html',\n  styles: [\n  ]\n})\nexport class UsersListComponent implements OnInit {\n\n  users: any = [];\n\n  constructor(\n    private usersService: UsersService,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this._getUsers();\n  }\n\n  deleteUser(userId: string) {\n    this.confirmationService.confirm({\n      message: 'Do you want to Delete this User?',\n      header: 'Delete User',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        this.usersService.deleteUser(userId).subscribe(\n          () => {\n            this._getUsers();\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Success',\n              detail: 'User is deleted!'\n            });\n          },\n          () => {\n            this.messageService.add({\n              severity: 'error',\n              summary: 'Error',\n              detail: 'User is not deleted!'\n            });\n          }\n        );\n      }\n    });\n  }\n\n  updateUser(userid: string) {\n    this.router.navigateByUrl(`users/form/${userid}`);\n  }\n\n  private _getUsers() {\n    this.usersService.getUsers().subscribe((users) => {\n      this.users = users;\n    });\n  }\n}\n","<p-toast></p-toast>\n<div class=\"admin-page\">\n  <p-card header=\"Users\" subheader=\"List of all Users\" styleClass=\"text-center\">\n    <div class=\"p-grid\">\n      <div class=\"col-12 \">\n        <p-toolbar>\n          <div class=\"p-toolbar-group-left\">\n            <p-button label=\"New\" icon=\"pi pi-plus\" routerLink=\"form\" ></p-button>\n          </div>\n        </p-toolbar>\n      </div>\n    </div>\n    <div class=\"grid \">\n      <div class=\"col-12\">\n        <p-table [value]=\"users\" styleClass=\"p-datatable-gridlines\" responsiveLayout=\"scroll\">\n          <ng-template pTemplate=\"header\">\n              <tr>\n                  <th pSortableColumn=\"name\">Name<p-sortIcon field=\"name\"></p-sortIcon></th>\n                  <th>Email</th>\n                  <th>Is Admin</th>\n                  <th>Country</th>\n                  <th>Option</th>\n              </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-user>\n              <tr>\n                  <td>{{ user.name }}</td>\n                  <td>{{ user.email }}</td>\n                  <td>\n                    <p-tag *ngIf=\"user.isAdmin\" styleClass=\"mr-2\" icon=\"pi pi-user\" severity=\"success\" value=\"Admin\"></p-tag>\n                    <p-tag *ngIf=\"!user.isAdmin\" styleClass=\"mr-2\" icon=\"pi pi-user\" severity=\"warning\" value=\"User\"></p-tag>\n                  </td>\n                  <td>{{ user.country }}</td>\n                  <td>\n                    <p-button (click)=\"deleteUser(user.id)\"\n                    styleClass=\"p-button-danger ml-2\" icon=\"pi pi-trash\"></p-button>\n                    <p-button (click)=\"updateUser(user.id)\"\n                    styleClass=\"p-button-info ml-3\" icon=\"pi pi-pencil\"></p-button>\n                  </td>\n              </tr>\n          </ng-template>\n      </p-table>\n      </div>\n    </div>\n  </p-card>\n</div>\n<p-confirmDialog [breakpoints]=\"{'960px': '75vw', '640px': '100vw'}\"  [style]=\"{width: '50vw'}\" rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'admin-shell',\n  templateUrl: './shell.component.html'\n})\nexport class ShellComponent   {\n\n\n}\n","<div class=\"admin-wrapper\">\n  <admin-sidebar></admin-sidebar>\n  <div class=\"admin-main\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { AuthService } from '@redbits/users';\n\n@Component({\n  selector: 'admin-sidebar',\n  templateUrl: './sidebar.component.html'\n})\nexport class SidebarComponent   {\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n\n  logoutUser() {\n    this.authService.logout();\n  }\n\n}\n","<div class=\"admin-sidebar\">\n  <div class=\"logo\">\n    <img src=\"/assets/images/logo.png\" routerLink=\"/\">\n  </div>\n  <div class=\"links\">\n    <ul>\n      <li>\n        <a routerLink=\"/\"><i class=\"pi pi-home\"></i>Dashboard</a>\n      </li>\n      <li>\n        <a routerLink=\"/products\"><i class=\"pi pi-briefcase\"></i>Products</a>\n      </li>\n      <li>\n        <a routerLink=\"/categories\"><i class=\"pi pi-list\"></i>Categories</a>\n      </li>\n      <li>\n        <a routerLink=\"/orders\"><i class=\"pi pi-shopping-cart\"></i>Orders</a>\n      </li>\n      <li>\n        <a routerLink=\"/users\"><i class=\"pi pi-users\"></i>Users</a>\n      </li>\n      <li>\n        <a class=\"logout\"><i class=\"pi pi-sign-out\" style=\" cursor:pointer\" (click)=\"logoutUser()\"></i>Logout</a>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from 'environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiURL: 'https://kruhitka-backend.herokuapp.com/api/v1/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","export * from './lib/orders.module';\nexport * from './lib/model/order';\nexport * from './lib/model/order-item';\nexport * from './lib/services/orders.service';\nexport * from './lib/services/cart.service';\nexport * from './lib/model/cart';\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '@redbits/orders';\n\n@Component({\n  selector: 'orders-cart-icon',\n  templateUrl: './cart-icon.component.html',\n  styles: [\n  ]\n})\nexport class CartIconComponent implements OnInit {\n\n  cartCount = 0;\n\n  constructor(\n    private cartService: CartService,\n  ) { }\n\n  ngOnInit(): void {\n    this.cartService.cart$.subscribe(cart => {\n      console.log(cart);\n      this.cartCount = cart?.items?.length ?? 0;\n    })\n\n  }\n\n}\n","<i class=\"pi pi-shopping-cart mr-4 p-text-secondary\" pBadge style=\"font-size: 1.5em\" [value]=\"cartCount\"\n  severity=\"info\" routerLink=\"/cart\" ></i>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CartService, OrdersService } from '@redbits/orders';\nimport { Subject, take, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'orders-order-summary',\n  templateUrl: './order-summary.component.html',\n  styles: [\n  ]\n})\nexport class OrderSummaryComponent implements OnInit, OnDestroy {\n\n  endSubs$: Subject<any> = new Subject();\n  totalPrice: number;\n  isCheckout = false;\n\n  constructor(\n    private cartService: CartService,\n    private ordersService: OrdersService,\n    private router: Router\n  ) {\n    this.router.url.includes('checkout') ? this.isCheckout = true : this.isCheckout = false;\n   }\n\n  ngOnInit(): void {\n    this._getOrderSummary();\n  }\n\n  ngOnDestroy(): void {\n    this.endSubs$.next('any');\n    this.endSubs$.complete();\n  }\n\n  _getOrderSummary() {\n    this.cartService.cart$.pipe(takeUntil(this.endSubs$)).subscribe((cart) => {\n      this.totalPrice = 0;\n      if (cart) {\n        cart.items.map((item) => {\n          this.ordersService\n            .getProduct(item.productId)\n            .pipe(take(1))\n            .subscribe((product) => {\n              this.totalPrice += product.price * item.quantity;\n            });\n        });\n      }\n    });\n  }\n\n  navigateToCheckout(){\n    this.router.navigate(['/checkout'])\n  }\n}\n","<div class=\"order-summary\">\n  <h3>Order Summary</h3>\n  <div class=\"summary-price\">\n    <span>Items Price</span>\n    <span>{{ totalPrice | currency }}</span>\n  </div>\n  <div class=\"summary-price\">\n    <span>Packing & Shipping</span>\n    <span class=\"free\">Free</span>\n  </div>\n  <div class=\"to-checkout\">\n    <div class=\"summary-price\">\n      <span>Total Price</span>\n      <span>{{ totalPrice | currency }}</span>\n    </div>\n    <div class=\"checkout-button\" *ngIf=\"!isCheckout\">\n      <p-button label=\"Checkout\" (onClick)=\"navigateToCheckout()\"></p-button>\n    </div>\n  </div>\n</div>\n","export class Cart {\r\n  items: CartItem[];\r\n}\r\n\r\n\r\nexport class CartItem {\r\n  productId?: string;\r\n  quantity?: number;\r\n}\r\n\r\n\r\nexport class CartItemDetailed {\r\n  product?: any;\r\n  quantity?: number\r\n}\r\n","import {Product} from '../../../../products/src/lib/models/product'\r\nimport { Category } from 'libs/products/src/lib/models/category';\r\n\r\nexport class OrderItem{\r\n  product?: string;\r\n  quantity?: number;\r\n}\r\n","import { OrderItem } from \"./order-item\";\r\nimport { User } from \"@redbits/users\";\r\n\r\nexport class Order{\r\n  id?: string;\r\n  orderItems?: OrderItem[];\r\n  shippingAddress1?: string;\r\n  shippingAddress2?: string;\r\n  city?: string;\r\n  zip?: string;\r\n  country?: string;\r\n  phone?: string;\r\n  status?: number;\r\n  totalPrice?: string;\r\n  user?: any;\r\n  dateOrdered?: string;\r\n}\r\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { CartService } from './services/cart.service';\nimport { CartIconComponent } from './components/cart-icon/cart-icon.component';\nimport {BadgeModule} from 'primeng/badge';\nimport { CartPageComponent } from './pages/cart-page/cart-page.component';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { OrderSummaryComponent } from './components/order-summary/order-summary.component';\nimport { CheckoutPageComponent } from './pages/checkout-page/checkout-page.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { CardModule } from 'primeng/card';\nimport { ThankYouComponent } from './pages/thank-you/thank-you.component';\nimport { AboutUsComponent } from './pages/about-us/about-us.component';\nimport { AuthGuard } from '@redbits/users';\n\nexport const ordersRoutes: Route[] = [\n  {\n    path: 'cart',\n    component: CartPageComponent\n  },\n  {\n    path: 'checkout',\n    canActivate: [AuthGuard],\n    component: CheckoutPageComponent\n  },\n  {\n    path: 'success',\n    component: ThankYouComponent\n  },\n  {\n    path: 'about',\n    component: AboutUsComponent\n  }\n];\n\n@NgModule({\n  imports: [CommonModule,\n    BadgeModule,\n    RouterModule.forChild(ordersRoutes),\n    CardModule,ReactiveFormsModule\n    ,InputTextModule,\n    InputNumberModule,\n    FormsModule,\n    ButtonModule],\n\n  declarations: [\n    CartIconComponent,\n    CartPageComponent,\n    OrderSummaryComponent,\n    CheckoutPageComponent,\n    ThankYouComponent,\n    AboutUsComponent\n  ],\n  exports: [\n    CartIconComponent,\n    CartPageComponent,\n\n  ],\n})\nexport class OrdersModule {\n  constructor(\n    cartService: CartService,\n  ) {\n    cartService.initCartLocalStorage();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'orders-about-us',\n  templateUrl: './about-us.component.html',\n  styles: [\n  ]\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"about-page\">\n  <div class=\"grid\">\n    <div class=\"col-12  md:col-3\">\n      <img class=\"img-about\" src=\"assets/images/teamPic.jpg\" alt=\"\">\n    </div>\n\n    <div class=\"col-12  md:col-9 md:text-center\">\n      <h3>Juliia and Nataliia</h3>\n      <p class=\"about\">We are grateful to everyone who makes an order now, your support is very important to us and our\n        country.\n        Making your order, we feel that someone in the world becomes happy and this raises confidence that there will be\n        peace in the world\n        Part of the money from orders will go to help the children of our country</p>\n    </div>\n  </div>\n  <div class=\"odessa\">\n    <img class=\"odessa\"src=\"assets/images/odessa.PNG\" style=\"width:800px;\" alt=\"\">\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CartItemDetailed, CartService, OrdersService } from '@redbits/orders';\nimport { Subject, takeUntil } from 'rxjs';\n\n\n@Component({\n  selector: 'orders-cart-page',\n  templateUrl: './cart-page.component.html',\n  styles: [\n  ]\n})\nexport class CartPageComponent implements OnInit, OnDestroy{\n\n  cartItemsDetailed: CartItemDetailed[] = [];\n  cartCount = 0;\n  endSubs$: Subject<any> = new Subject();\n\n  constructor(\n    private router: Router,\n    private cartService: CartService,\n    private ordersService: OrdersService\n  ) { }\n\n  ngOnInit(): void {\n    this._getCartDetails();\n  }\n\n  ngOnDestroy() {\n    this.endSubs$.next('any');\n    this.endSubs$.complete();\n  }\n\n\n  private _getCartDetails(): void {\n    this.cartService.cart$.pipe(takeUntil(this.endSubs$)).subscribe(respCart => {\n      this.cartItemsDetailed = [];\n      this.cartCount = respCart?.items?.length ?? 0;\n      respCart.items.forEach(cartItem => {\n        this.ordersService.getProduct(cartItem.productId).subscribe((respProduct) => {\n          this.cartItemsDetailed.push({\n            product: respProduct,\n            quantity: cartItem.quantity\n          })\n        })\n      })\n    })\n  }\n\n  backToShop() {\n    this.router.navigate(['/products'])\n  }\n\n  deleteCartItem(cartItem: CartItemDetailed) {\n    this.cartService.deleteCartItem(cartItem.product.id)\n  }\n\n  updateCartItemQuantity(event, cartItem: CartItemDetailed) {\n    this.cartService.setCartItem({\n      productId: cartItem.product.id,\n      quantity: event.value\n    }, true);\n  }\n}\n","<div class=\"cart-page\">\n  <div class=\"grid \">\n    <div class=\"col-8\">\n      <div>\n        <p-button styleClass=\"ml-5 mb-5\" label=\"Continue shopping\" icon=\"pi pi-arrow-left\" (onClick)=\"backToShop()\">\n        </p-button>\n      </div>\n      <div>\n        <h4>\n          My cart : {{ cartCount }} Item(s)\n        </h4>\n      </div>\n      <div>\n        <div class=\"cart-shipping m-5\">\n          Shipping after the payment, Delivery time : 1 to 4 working days\n        </div>\n\n        <div class=\"cart-item m-5\" *ngFor=\"let cartItem of cartItemsDetailed\" style=\"max-width:100%; height: 200px;\">\n          <div class=\"grid \">\n            <div class=\"col-2 cart-item-image\">\n              <img [src]=\"cartItem.product.image\" style=\"width:150px; height: 150px\"  [attr.alt]=\"cartItem.product.name\">\n            </div>\n            <div class=\"col-5\">\n              <div class=\" cart-item-name\" style=\"text-align:center\">{{cartItem.product.name}}</div>\n            </div>\n            <div class=\"col-3 cart-item-price\">{{ cartItem.product.price | currency }}</div>\n            <div class=\"col-2 cart-item-remove\" style=\"text-align:end; padding-right: 15px;\">\n              <p-button icon=\"pi pi-trash\" (onClick)=\"deleteCartItem(cartItem)\"></p-button>\n            </div>\n          </div>\n          <div class=\"col-12 \">\n            <div class=\"field cart-item-quantity\"  style=\"text-align:end; margin-top:-200px\">\n              <p-inputNumber mode=\"decimal\" [showButtons]=\"true\" [inputId]=\"cartItem.product.id\" [min]=\"1\" [max]=\"10\"\n                [(ngModel)]=\"cartItem.quantity\" (onInput)=\"updateCartItemQuantity($event, cartItem)\">\n              </p-inputNumber>\n            </div>\n            <div class=\"cart-item-subtotal\" style=text-align:end>\n              Subtotal :\n              <span class=\"cart-item-subtotal-value\">{{ cartItem.product.price * cartItem.quantity | currency }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-4\">\n      <orders-order-summary></orders-order-summary>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Cart, CartService, Order, OrderItem, OrdersService } from '@redbits/orders';\nimport { UsersService } from '@redbits/users';\nimport { Subject, takeUntil } from 'rxjs';\nimport { StripeService } from 'ngx-stripe';\n\n\n\n@Component({\n  selector: 'orders-checkout-page',\n  templateUrl: './checkout-page.component.html',\n  styles: [\n  ]\n})\nexport class CheckoutPageComponent implements OnInit, OnDestroy {\n\n  checkoutFormGroup: FormGroup;\n  isSubmitted = false;\n  editmode = false;\n  orderItems: OrderItem[] = [];\n  //userId = \"61fe6037d36f787dd15de18d\";\n  userId: string;\n  currentUserId: string | undefined;\n  unsubscribe$: Subject<any> = new Subject();\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private usersService: UsersService,\n    private cartService: CartService,\n    private stripeService: StripeService,\n    private ordersService: OrdersService\n  ) { }\n\n  ngOnInit(): void {\n    this._initCheckoutForm();\n    this._getCartItems();\n    this._autoFillUserData();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next('any');\n    this.unsubscribe$.complete();\n  }\n\n\n  private _initCheckoutForm() {\n    this.checkoutFormGroup = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      phone: ['', Validators.required],\n      street: ['', Validators.required],\n      apartment: [''],\n      zip: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required]\n    });\n  }\n\n  private _autoFillUserData() {\n    this.usersService.observeCurrentUser().pipe(takeUntil(this.unsubscribe$)).subscribe((user) => {\n      if (user) {\n        this.userId = user.id;\n        this.checkoutForm.name.setValue(user.name);\n        this.checkoutForm.email.setValue(user.email);\n        this.checkoutForm.phone.setValue(user.phone);\n        this.checkoutForm.city.setValue(user.city);\n        this.checkoutForm.street.setValue(user.street);\n        this.checkoutForm.country.setValue(user.country);\n        this.checkoutForm.zip.setValue(user.zip);\n        this.checkoutForm.apartment.setValue(user.apartment);\n      }\n\n    })\n  }\n\n  private _getCartItems() {\n    const cart: Cart = this.cartService.getCart();\n    this.orderItems = cart.items.map(item => {\n      return {\n        product: item.productId,\n        quantity: item.quantity,\n      }\n    });\n\n  }\n\n  get checkoutForm() {\n    return this.checkoutFormGroup.controls\n  }\n\n  backToCart() {\n    this.router.navigate(['/cart'])\n  }\n\n  placeOrder() {\n    this.isSubmitted = true;\n    if (this.checkoutFormGroup.invalid) {\n      return;\n    }\n\n    const order: Order = {\n      orderItems: this.orderItems,\n      shippingAddress1: this.checkoutForm.street.value,\n      shippingAddress2: this.checkoutForm.apartment.value,\n      city: this.checkoutForm.city.value,\n      zip: this.checkoutForm.zip.value,\n      country: this.checkoutForm.country.value,\n      phone: this.checkoutForm.phone.value,\n      status: 0,\n      user: this.userId,\n      dateOrdered: `${Date.now()}`\n    };\n\n    this.ordersService.cacheOrderData(order);\n\n    this.ordersService.createCheckoutSession(this.orderItems).subscribe((error) => {\n      if (error) {\n        console.log('Error in redirect to payment');\n      }\n    })\n\n  }\n}\n","<div class=\"checkout-page\">\n  <div>\n    <p-button (click)=\"backToCart()\" styleClass=\"ml-5 mb-5\" label=\"Back to cart\" icon=\"pi pi-arrow-left\"></p-button>\n\n  </div>\n</div>\n\n<div class=\"grid checkout-form\">\n  <div class=\"checkoutForm col-8\">\n    <form [formGroup]=\"checkoutFormGroup\">\n      <div class=\"p-fluid formgrid grid \">\n        <div class=\"field col-12 md:col-6 mt-5 \">\n          <div class=\"p-inputgroup\">\n            <input formControlName=\"name\" type=\"text\" pInputText placeholder=\"Name\">\n            <small *ngIf=\"checkoutForm.name.invalid && isSubmitted\" class=\"p-error\">Name is required.</small>\n          </div>\n        </div>\n\n        <div class=\"field col-12 md:col-6 mt-5\">\n          <div class=\"p-inputgroup\">\n            <input formControlName=\"email\" type=\"text\" pInputText placeholder=\"Email\">\n            <small *ngIf=\"checkoutForm.email.invalid && isSubmitted\" class=\"p-error\"><span\n                *ngIf=\"form.controls.email.errors.required\">email is required</span>Email is required.</small>\n          </div>\n        </div>\n\n        <div class=\"field col-12 md:col-4 mt-5\">\n          <div class=\"p-inputgroup\">\n            <input formControlName=\"phone\" type=\"text\" pInputText placeholder=\"Phone\">\n            <small *ngIf=\"checkoutForm.phone.invalid && isSubmitted\" class=\"p-error\">Phone is required.</small>\n          </div>\n        </div>\n\n        <div class=\"field col-12 md:col-12 mt-5\">\n          <div class=\"p-inputgroup\">\n            <input formControlName=\"street\" type=\"text\" pInputText placeholder=\"Street\">\n            <small *ngIf=\"checkoutForm.street.invalid && isSubmitted\" class=\"p-error\">Street is required.</small>\n          </div>\n        </div>\n\n        <div class=\"field col-12 md:col-4 mt-5\">\n          <div class=\"p-inputgroup\">\n            <input formControlName=\"apartment\" type=\"text\" pInputText placeholder=\"Apartment\">\n          </div>\n        </div>\n\n        <div class=\"field col-12 md:col-4 mt-5\">\n          <div class=\"p-inputgroup\">\n            <input formControlName=\"zip\" type=\"text\" pInputText placeholder=\"Zip Code\">\n            <small *ngIf=\"checkoutForm.zip.invalid && isSubmitted\" class=\"p-error\">Zip Code is required.</small>\n          </div>\n        </div>\n\n        <div class=\"field col-12 md:col-4 mt-5\">\n          <div class=\"p-inputgroup\">\n            <input formControlName=\"city\" type=\"text\" pInputText placeholder=\"City\">\n            <small *ngIf=\"checkoutForm.city.invalid && isSubmitted\" class=\"p-error\">City is required.</small>\n          </div>\n        </div>\n\n        <div class=\"field col-12 md:col-4 mt-5\">\n          <div class=\"p-inputgroup\">\n            <input formControlName=\"country\" type=\"text\" pInputText placeholder=\"Country\">\n            <small *ngIf=\"checkoutForm.country.invalid && isSubmitted\" class=\"p-error\">Country is required.</small>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n  <div class=\"col-4\">\n    <orders-order-summary></orders-order-summary>\n    <div class=\"checkout-button mt-5 \">\n      <p-button  (click)=\"placeOrder()\" label=\"Place-Order\"></p-button>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { CartService, OrdersService } from '@redbits/orders';\n\n@Component({\n  selector: 'orders-thank-you',\n  templateUrl: './thank-you.component.html',\n  styles: [\n  ]\n})\nexport class ThankYouComponent implements OnInit {\n\n  constructor(\n    private orderService: OrdersService,\n    private cartService: CartService\n  ) { }\n\n  ngOnInit(): void {\n    const orderData = this.orderService.getCachedOrderData();\n    this.orderService.createOrder(orderData).subscribe(() => {\n      this.cartService.emptyCart();\n      this.orderService.removeCachedOrderData();\n    })\n  }\n\n}\n","<div class=\"checkout-page\">\n  <div class=\"thankyou-page\">\n    <h3>Thank you for Shopping with us</h3>\n    <h3 class=\"mb-8\">We have received your order and it will be delivered to your address.</h3>\n    <p-button styleClass=\"mb-8\" label=\"Back to shop\" routerLink=\"/\"></p-button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Cart, CartItem } from '../model/cart';\n\n\nexport const CART_KEY = \"cart\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n\n  cart$: BehaviorSubject<Cart> = new BehaviorSubject(this.getCart());\n\n  constructor() { }\n\n  initCartLocalStorage() {\n    const cart: Cart = this.getCart();\n    if (!cart) {\n\n      const initialCart = {\n        items: [],\n      };\n      const initialCartJson = JSON.stringify(initialCart);\n      localStorage.setItem(CART_KEY, initialCartJson);\n    }\n  }\n\n  getCart(): Cart {\n    const cartJsonString: string = localStorage.getItem(CART_KEY);\n    const cart: Cart = JSON.parse(cartJsonString);\n    return cart;\n  }\n\n  emptyCart() {\n    const intialCart = {\n      items: []\n    };\n    const intialCartJson = JSON.stringify(intialCart);\n    localStorage.setItem(CART_KEY, intialCartJson);\n    this.cart$.next(intialCart);\n  }\n\n  setCartItem(cartItem: CartItem, updateCartItem?: boolean): Cart {\n    const cart = this.getCart();\n    const cartItemExist = cart.items.find((item) => item.productId === cartItem.productId)\n    if (cartItemExist) {\n      cart.items.map(item => {\n        if (item.productId === cartItem.productId) {\n          if (updateCartItem) {\n            item.quantity = cartItem.quantity;\n          } else {\n            item.quantity = item.quantity + cartItem.quantity;\n          }\n\n          return item;\n        }\n      })\n    } else {\n      cart.items.push(cartItem);\n    }\n    const cartJson = JSON.stringify(cart);\n    localStorage.setItem(CART_KEY, cartJson);\n    this.cart$.next(cart);\n    return cart;\n  }\n\n  deleteCartItem(productId: string) {\n    const cart = this.getCart();\n    const newCart = cart.items.filter(item => item.productId !== productId)\n\n    cart.items = newCart;\n\n    const cartJsonString = JSON.stringify(cart);\n    localStorage.setItem(CART_KEY, cartJsonString);\n\n    this.cart$.next(cart);\n  }\n}\n","import { environment } from '../../../../../environments/environment';\r\nimport { Order } from './../model/order';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, Observable, switchMap } from 'rxjs';\r\nimport { OrderItem } from '@redbits/orders';\r\nimport { StripeService } from 'ngx-stripe';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersService {\r\n\r\n\r\n  apiURLOrders = environment.apiURL + 'orders';\r\n  apiURLProducts = environment.apiURL + 'products';\r\n\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private stripeService: StripeService\r\n  ) {\r\n\r\n  }\r\n\r\n\r\n  getOrders(): Observable<Order[]> {\r\n    return this.http.get<Order[]>(this.apiURLOrders);\r\n  }\r\n\r\n  getOrder(orderId: string): Observable<Order> {\r\n    return this.http.get<Order>(`${this.apiURLOrders}/${orderId}`);\r\n  }\r\n\r\n  createOrder(order: Order): Observable<Order> {\r\n    return this.http.post<Order>(this.apiURLOrders, order);\r\n  }\r\n\r\n  updateOrder(orderStatus: { status: string }, orderId: string): Observable<Order> {\r\n    return this.http.put<Order>(`${this.apiURLOrders}/${orderId}`, orderStatus);\r\n  }\r\n\r\n  deleteOrder(orderId: string): Observable<Order> {\r\n    return this.http.delete<Order>(`${this.apiURLOrders}/${orderId}`);\r\n  }\r\n\r\n  getOrdersCount(): Observable<number> {\r\n    return this.http\r\n      .get<number>(`${this.apiURLOrders}/get/count`)\r\n      .pipe(map((objectValue: any) => objectValue.orderCount));\r\n  }\r\n\r\n  getTotalSales(): Observable<number> {\r\n    return this.http\r\n      .get<number>(`${this.apiURLOrders}/get/totalsales`)\r\n      .pipe(map((objectValue: any) => objectValue.totalsales));\r\n  }\r\n\r\n  getProduct(productId: string): Observable<any> {\r\n    return this.http.get<any>(`${this.apiURLProducts}/${productId}`);\r\n  }\r\n\r\n  createCheckoutSession(orderItem: OrderItem[]) {\r\n    return this.http.post(`${this.apiURLOrders}/create-checkout-session`, orderItem).pipe(switchMap((session: { id: string }) => {\r\n      return this.stripeService.redirectToCheckout({ sessionId: session.id })\r\n    }));\r\n  }\r\n\r\n  cacheOrderData(order: Order){\r\n    localStorage.setItem('orderData', JSON.stringify(order))\r\n  }\r\n\r\n  getCachedOrderData(): Order{\r\n    return JSON.parse(localStorage.getItem('orderData'));\r\n  }\r\n\r\n  removeCachedOrderData(){\r\n    localStorage.removeItem('orderData');\r\n  }\r\n}\r\n","export * from './lib/products.module';\nexport * from './lib/services/categories.service';\nexport * from './lib/services/products.service';\nexport * from './lib/models/category';\nexport * from './lib/models/product';\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Category } from '../../models/category';\nimport { CategoriesService } from '../../services/categories.service';\n\n@Component({\n  selector: 'products-categories-banner',\n  templateUrl: './categories-banner.component.html',\n  styles: [\n  ]\n})\nexport class CategoriesBannerComponent implements OnInit, OnDestroy {\n\n  categories: Category[] = [];\n  endSubs$: Subject<any> = new Subject();\n\n\n  constructor(private categoriesService: CategoriesService) { }\n\n  ngOnInit(): void {\n    this.categoriesService.getCategories().pipe(takeUntil(this.endSubs$)).subscribe((categories) => {\n      this.categories = categories;\n      \n    })\n  }\n\n  ngOnDestroy() {\n      this.endSubs$.next('any');\n      this.endSubs$.complete();\n  }\n}\n","<div class=\"categories-banner  mt-8\" >\n  <h3>Categories</h3>\n  <div class=\"grid\">\n    <div class=\"col-12 md:col-3 sm:col-6\" *ngFor=\"let category of categories\">\n      <div class=\"category\" [routerLink]=\"'/category/'+ category.id\">\n        <div class=\"category-icon\">\n        </div>\n        <div class=\"category-name\">\n          <h4>{{category.name}}</h4>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Product } from '@redbits/products';\nimport { Subject } from 'rxjs/internal/Subject';\nimport { takeUntil } from 'rxjs/operators';\nimport { ProductsService } from '../../services/products.service';\n\n@Component({\n  selector: 'products-featured-products',\n  templateUrl: './featured-products.component.html',\n  styles: [\n  ]\n})\nexport class FeaturedProductsComponent implements OnInit, OnDestroy {\n\n  products: Product[] = [];\n  endSubs$: Subject<any> = new Subject();\n\n  constructor(private prodService: ProductsService) { }\n\n\n  ngOnDestroy(): void {\n    this.endSubs$.next;\n    this.endSubs$.complete;\n  }\n\n  ngOnInit(): void {\n    this._getFeaturedProducts();\n  }\n\n  private _getFeaturedProducts() {\n    this.prodService.getFeaturedProducts(4).pipe(takeUntil(this.endSubs$)).subscribe((products) => {\n      this.products = products;\n    })\n  }\n}\n","<div class=\"featured-products\">\n  <h3>Featured Products</h3>\n  <div class=\"grid\">\n    <div class=\"col-12 md:col-3 sm:col-6\" *ngFor=\"let product of products\">\n      <products-product-item [product]=\"product\"></products-product-item>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CartItem, CartService } from '@redbits/orders';\nimport { Product } from '@redbits/products';\n\n@Component({\n  selector: 'products-product-item',\n  templateUrl: './product-item.component.html',\n  styles: [\n  ]\n})\nexport class ProductItemComponent implements OnInit {\n\n  @Input() product: any = Product;\n\n  constructor(\n    private cartService: CartService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  addProductToCart() {\n    const cartItem: CartItem = {\n      productId: this.product.id,\n      quantity: 1\n    }\n    this.cartService.setCartItem(cartItem)\n  }\n\n}\n","\n<div class=\"product-item\">\n  <div class=\"product-item-wrapper\">\n    <div class=\"card\">\n      <div class=\"img\">\n        <img [routerLink]=\"'/products/' + product.id\" [src]=\"product.image\" class=\"images\" width=\"240\" alt=\"\">\n      </div>\n      <div class=\"info\">\n        <span>{{ product.name }}</span>\n        <p>{{ product.price | currency}}</p>\n      </div>\n        <p-button label=\"Add to cart\" icon=\"pi pi-shopping-cart\" (onClick)=\"addProductToCart()\" iconPos=\"right\"\n          styleClass=\"add-to-card mt-4 banner-button p-button-rounded p-button-primary\" ></p-button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n\n\n@Component({\n  selector: 'product-search',\n  templateUrl: './products-search.component.html',\n  styles: [\n  ]\n})\nexport class ProductsSearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export class Category {\r\n  id? : string;\r\n  name? : string;\r\n  icon? : string;\r\n  color? : string;\r\n  checked? : boolean;\r\n}\r\n","import { Category } from \"./category\";\r\n\r\n\r\nexport class Product {\r\n  id? : string;\r\n  name? : string;\r\n  description? : string;\r\n  richDescription? : string;\r\n  image? : string;\r\n  images? : string[];\r\n  brand? : string;\r\n  price? : number;\r\n  category? : Category;\r\n  countInStock? : number;\r\n  rating? : number;\r\n  numReviews? : number;\r\n  isFeatured? : boolean;\r\n  dateCreated? : string;\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CartItem, CartService } from '@redbits/orders';\nimport { Product, ProductsService } from '@redbits/products';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'products-product-page',\n  templateUrl: './product-page.component.html',\n  styles: [\n  ]\n})\nexport class ProductPageComponent implements OnInit, OnDestroy {\n\n  endSubs$: Subject<any> = new Subject();\n  product!: Product;\n  quantity = 1;\n\n\n  constructor(\n    private prodService: ProductsService,\n    private route: ActivatedRoute,\n    private cartService: CartService\n  ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      if (params['productid']) {\n        this._getProduct(params['productid']);\n      }\n    })\n  }\n\n  ngOnDestroy():void {\n    this.endSubs$.next('any');\n    this.endSubs$.complete();\n  }\n\n  addProductToCart() {\n    const cartItem: CartItem = {\n      productId: this.product.id,\n      quantity: this.quantity\n    }\n\n    this.cartService.setCartItem(cartItem)\n  }\n\n  private _getProduct(id: string) {\n    this.prodService.getProduct(id).pipe(takeUntil(this.endSubs$)).subscribe(resProd => {\n      this.product = resProd;\n    })\n  }\n}\n","<div class=\"product-page\" *ngIf=\"product\">\n  <div class=\"grid\">\n    <div class=\"col-12  md:col-6\">\n       <!-- <ui-gallery></ui-gallery> -->\n     <img class=\"img-about\" src=\"{{ product.image}}\"\n        style=\"width: 500px; height: 320px; display:grid;margin: 0 auto;border-radius:15px\" />\n    </div>\n    <div class=\"col-12  md:col-6  product\">\n      <h2 class=\"product-name\">{{ product.name }}</h2>\n      <p class=\"product-desc\">\n        {{ product.description }}\n      </p>\n      <div class=\"product-rating\">\n        <p-rating [(ngModel)]=\"product.rating\" [cancel]=\"false\" [disabled]=\"true\"></p-rating>\n      </div>\n      <div class=\"product-price\">\n        {{ product.price | currency}}\n      </div>\n      <div class=\"product-quantity\">\n        <div class=\"field col-12 md:col-3 p-0\">\n          <label for=\"quantity\">Quantity</label>\n          <p-inputNumber [(ngModel)]=\"quantity\" mode=\"decimal\" [showButtons]=\"true\" inputId=\"quantity\" [min]=\"1\"\n            [max]=\"10\">\n          </p-inputNumber>\n        </div>\n      </div>\n      <div class=\"product-action\">\n        <p-button label=\"Buy now\" iconPos=\"right\" styleClass=\"mr-2 banner-button  p-button-rounded p-button-primary \">\n        </p-button>\n        <p-button label=\"Add to cart\" iconPos=\"right\"\n          styleClass=\"add-to-card  banner-button  p-button-rounded p-button-primary \" (onClick)=\"addProductToCart()\">\n        </p-button>\n      </div>\n    </div>\n  </div>\n  <div class=\"grid product-rich-desc\">\n    <div class=\"col-12\">\n      <div [innerHTML]=\"product.richDescription\"></div>\n    </div>\n  </div>\n</div>\n","import { ProductsService } from './../../services/products.service';\nimport { Component, OnInit } from '@angular/core';\nimport { CategoriesService, Category, Product } from '@redbits/products';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'products-list',\n  templateUrl: './products-list.component.html',\n  styles: [\n  ]\n})\nexport class ProductsListComponent implements OnInit {\n\n  products: Product[] = [];\n  categories: Category[] = [];\n  isCategoryPage!: boolean;\n\n\n  constructor(private prodService: ProductsService,\n    private catService: CategoriesService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      params['categoryid'] ? this._getProducts([params['categoryid']]) : this._getProducts();\n      params['categoryid'] ? (this.isCategoryPage = true) : (this.isCategoryPage = false);\n    })\n\n    this._getCategories();\n  }\n\n  private _getProducts(categoriesFilter?: string[]) {\n    this.prodService.getProducts(categoriesFilter).subscribe((product) => {\n      this.products = product;\n    })\n  }\n\n  private _getCategories() {\n    this.catService.getCategories().subscribe((category) => {\n      this.categories = category;\n    })\n  }\n\n  categoryFilter() {\n    const selectedCategories = this.categories.filter((category) => category.checked).map((category) => category.id)\n\n    this._getProducts(selectedCategories);\n  }\n}\n","<div class=\"products-page\">\n  <div class=\"grid\">\n    <div class=\"col-12 \" *ngIf=\"!isCategoryPage\">\n      <h4 class=\"filter\">Categories</h4>\n      <div class=\"field-checkbox\" *ngFor=\"let category of categories\">\n        <p-checkbox  [(ngModel)]=\"category.checked\" [binary]=\"true\" inputId=\"category.id\" (onChange)=\"categoryFilter()\"></p-checkbox>\n        <label for=\"{{category.id}}\">{{ category.name }}</label>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"grid\" *ngIf=\"products\">\n        <div class=\"col-12 md:col-3 sm:col-6\" *ngFor=\"let product of products\">\n          <products-product-item [product]=\"product\"></products-product-item>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductsSearchComponent } from './components/products-search/products-search.component';\nimport { CategoriesBannerComponent } from './components/categories-banner/categories-banner.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OrdersModule } from '@redbits/orders';\nimport { ProductItemComponent } from './components/product-item/product-item.component';\nimport { FeaturedProductsComponent } from './components/featured-products/featured-products.component';\nimport { ButtonModule } from 'primeng/button';\nimport { ProductsListComponent } from './pages/products-list/products-list.component';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport { FormsModule } from '@angular/forms';\nimport { ProductPageComponent } from './pages/product-page/product-page.component';\nimport {RatingModule} from 'primeng/rating';\nimport {InputNumberModule} from 'primeng/inputnumber';\nimport {CardModule} from 'primeng/card';\nimport { UiModule } from '@redbits/ui';\n\n\n\n\nconst routes: Routes = [\n  {\n    path: 'products',\n    component: ProductsListComponent,\n  },\n  {\n    path: 'category/:categoryid',\n    component: ProductsListComponent,\n  },\n  {\n    path: 'products/:productid',\n    component: ProductPageComponent,\n  }\n]\n\n@NgModule({\n  imports: [CommonModule, OrdersModule, CheckboxModule, InputNumberModule, UiModule, CardModule,RatingModule, FormsModule, ButtonModule, RouterModule.forChild(routes)],\n  declarations: [\n    ProductsSearchComponent,\n    CategoriesBannerComponent,\n    ProductItemComponent,\n    FeaturedProductsComponent,\n    ProductsListComponent,\n\n    ProductPageComponent\n  ],\n  exports: [ProductsSearchComponent, FeaturedProductsComponent, CategoriesBannerComponent, ProductsListComponent, ProductPageComponent]\n})\n\n\n\nexport class ProductsModule {}\n","import { environment } from '../../../../../environments/environment';\nimport { Category } from './../models/category';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  apiURLCategories = environment.apiURL + 'categories';\n\n  constructor(private http: HttpClient) {\n\n   }\n\n\n   getCategories(): Observable<Category[]> {\n     return this.http.get<Category[]>(this.apiURLCategories);\n   }\n\n   getCategory(categoryId: string): Observable<Category> {\n    return this.http.get<Category>(`${this.apiURLCategories}/${categoryId}`);\n  }\n\n   createCategory(category: Category):  Observable<Category> {\n    return this.http.post<Category>(this.apiURLCategories, category);\n   }\n\n   updateCategory(category: Category):  Observable<Category> {\n    return this.http.put<Category>(`${this.apiURLCategories}/${category.id}`, category);\n   }\n\n   deleteCategory(categoryId: string): Observable<Category> {\n     return this.http.delete<Category>(`${this.apiURLCategories}/${categoryId}`);\n   }\n\n\n\n}\n","import { environment } from '../../../../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport {  Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from '../models/product';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n  getProductsSmall() {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  getCarsSmall() {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n\r\n  apiURLProducts = environment.apiURL + 'products';\r\n\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n\r\n  getProducts(categoriesFilter?: string[]): Observable<Product[]> {\r\n    let params = new HttpParams();\r\n    if(categoriesFilter){\r\n      params = params.append('categories', categoriesFilter.join(','))\r\n      console.log(params)\r\n    }\r\n    return this.http.get<Product[]>(this.apiURLProducts, { params: params});\r\n  }\r\n\r\n  createProduct(productData: FormData): Observable<Product> {\r\n    return this.http.post<Product>(this.apiURLProducts, productData);\r\n  }\r\n\r\n  getProduct(productId: string): Observable<Product> {\r\n    return this.http.get<Product>(`${this.apiURLProducts}/${productId}`);\r\n  }\r\n\r\n  updateProduct(productData: FormData, productid: string): Observable<Product> {\r\n    return this.http.put<Product>(`${this.apiURLProducts}/${productid}`, productData);\r\n  }\r\n\r\n  deleteProduct(productId: string): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiURLProducts}/${productId}`);\r\n  }\r\n\r\n  getProductsCount(): Observable<number> {\r\n    return this.http\r\n      .get<number>(`${this.apiURLProducts}/get/count`)\r\n      .pipe(map((objectValue: any) => objectValue.productCount));\r\n  }\r\n\r\n  getFeaturedProducts(count:number): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${this.apiURLProducts}/get/featured/${count}`);\r\n  }\r\n}\r\n","export * from './lib/ui';\nexport * from './lib/ui.module';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ui-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent implements OnInit {\n\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n  <div class=\"banner\">\n  <div class=\"grid\">\n    <div class=\"col-12 md:col-8 banner-text text-center animate__animated animate__slideInLeft text-center\">\n      <h1>KruhitkaLove &copy;</h1>\n      <h2>Handmades for children</h2>\n      <p>Let's Make Your Hapiness Together!</p>\n    </div>\n    <div class=\"col-12 md:col-4 banner-image animate__animated animate__zoomIn text-center\">\n      <img src=\"assets/images/cuti.jpg\" class=\"baby\" alt=\"\" width=\"350\" height=\"340\">\n    </div>\n  </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss']\n})\nexport class SliderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>slider works!</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Product } from '@redbits/products';\nimport { Subject } from 'rxjs';\n\n\n\n@Component({\n  selector: 'ui-gallery',\n  templateUrl: './ui-gallery.component.html',\n  styleUrls: ['./ui-gallery.component.css']\n})\nexport class UiGalleryComponent implements OnInit, OnDestroy {\n\n  endSubs$: Subject<any> = new Subject();\n  product!: Product;\n\n  constructor(\n\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy():void {\n    this.endSubs$.next('any');\n    this.endSubs$.complete();\n  }\n}\n","<p>ui-gallery works!</p>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BannerComponent } from './banner/banner.component';\r\nimport { SliderComponent } from './slider/slider.component';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport {CarouselModule} from 'primeng/carousel';\r\nimport { UiGalleryComponent } from './ui-gallery/ui-gallery.component';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CarouselModule, ButtonModule],\r\n  declarations: [\r\n    BannerComponent,\r\n    SliderComponent,\r\n    UiGalleryComponent,\r\n\r\n\r\n  ],\r\n  exports: [\r\n    BannerComponent,\r\n    SliderComponent,\r\n     UiGalleryComponent,\r\n  ],\r\n})\r\nexport class UiModule {}\r\n","export function ui(): string {\n  return 'ui';\n}\n","export * from './lib/state/users.facade';\nexport * from './lib/state/users.models';\nexport * from './lib/state/users.selectors';\nexport * from './lib/state/users.reducer';\nexport * from './lib/state/users.actions';\nexport * from './lib/users.module';\nexport * from './lib/services/users.service';\nexport * from './lib/models/users';\nexport * from './lib/services/auth-guard.service';\nexport * from './lib/services/jwt.interceptor';\nexport * from './lib/services/auth.service';\n","export class User {\r\n  id?: string;\r\n  name?: string;\r\n  password?: string;\r\n  email: string | undefined;\r\n  phone?: string;\r\n  token?: string;\r\n  isAdmin?: true;\r\n  street?: string;\r\n  apartment?: string;\r\n  zip?: string;\r\n  city?: string;\r\n  country?: string;\r\n}\r\n","import { LocalstorageService } from './../../services/localstorage.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'users-login',\n  templateUrl: './login.component.html',\n  styles: [\n  ]\n})\nexport class LoginComponent implements OnInit {\n\n  loginFormGroup: any = FormGroup;\n  isSubmitted = false;\n  authError = false;\n  authMessage = \"Email or password are wrong!\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private router: Router,\n    private localstorage: LocalstorageService) { }\n\n  ngOnInit(): void {\n    this._initLoginForm();\n  }\n\n  private _initLoginForm() {\n    this.loginFormGroup = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    })\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n\n    if (this.loginFormGroup.invalid) return;\n\n    this.auth.login(this.loginForm.email.value, this.loginForm.password.value).subscribe(\n      (user) => {\n        this.authError = false;\n        this.localstorage.setItem(user.token);\n\n          this.router.navigate(['/']).then(() => {\n            window.location.reload();\n          });\n\n      }, (err: HttpErrorResponse) => {\n        console.log(err);\n        this.authError = true;\n\n        if (err.status !== 400) {\n          this.authMessage = \"Error in the server, please try again later.\"\n        }\n      })\n\n  }\n\n  get loginForm() {\n    return this.loginFormGroup.controls;\n  }\n}\n","<div class=\"login-register\">\n  <div class=\"login-register-panel\">\n    <div class=\"grid\">\n      <div class=\"col-6\">\n        <img src=\"assets/images/login.jpg\" style=\"margin:0; width: 300px; height: 121%\">\n      </div>\n      <div class=\"col-6 p-5\">\n        <h3>Welcome </h3>\n        <h2>Login Page</h2>\n        <form [formGroup]=\"loginFormGroup\">\n          <div class=\"grid mt-6\">\n            <div class=\"col-12\">\n              <div class=\"p-inputgroup\">\n                <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\n                <input type=\"text\" formControlName=\"email\" pInputText placeholder=\"Email\">\n              </div>\n              <small *ngIf=\"loginForm.email.invalid && isSubmitted\" class=\"p-error\"><span\n                  *ngIf=\"loginForm.email.errors.required\">Email is required.</span>\n                <span *ngIf=\"loginForm.email.errors.email\">Email is invalid.</span></small>\n            </div>\n            <div class=\"col-12\">\n              <div class=\"p-inputgroup\">\n                <span class=\"p-inputgroup-addon\"><i class=\"pi pi-lock\"></i></span>\n                <input type=\"password\" formControlName=\"password\" pInputText placeholder=\"Password\">\n              </div>\n              <small *ngIf=\"loginForm.email.invalid && isSubmitted\" class=\"p-error\">Password is required.</small>\n            </div>\n            <div class=\"col-12\">\n              <p-button label=\"Submit\" styleClass=\"full-btn\" (onClick)=\"onSubmit()\"></p-button>\n            </div>\n\n           <!-- <div class=\"col-12\">\n              <p-button label=\"Sing Up\" styleClass=\"full-btn\" routerLink=\"/registration\"></p-button>\n            </div> -->\n            <div class=\"col-12\" *ngIf=\"isSubmitted && authError\">\n              <small class=\"p-error\">{{ authMessage }}</small>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'users-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  form: any = FormGroup;\n  isSubmitted = false;\n  editmode = false;\n  currentUserId: string | undefined;\n  userForm: any;\n\n  constructor( private location: Location,\n    private route: ActivatedRoute\n    ) { }\n\n  ngOnInit(): void {\n\n  }\n\n\n}\n","<p>reererrr</p>\n","import { LocalstorageService } from './localstorage.service';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private localStorageToken: LocalstorageService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const token = this.localStorageToken.getItem();\n\n    if (token) {\n      const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n\n      if (tokenDecode.isAdmin && !this._tokenExpired(tokenDecode.exp))\n        return true;\n    }\n\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  private _tokenExpired(expiration: number): boolean {\n    return Math.floor(new Date().getTime() / 1000) >= expiration;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/users';\nimport { LocalstorageService } from './localstorage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  apiURLUsers = environment.apiURL + 'users';\n\n  constructor(\n    private http: HttpClient,\n    private token: LocalstorageService,\n    private router: Router\n    ) { }\n\n  // method pour le log in au dashboard\n  login(email: string, password: string): Observable<User> {\n    return this.http.post<User>(`${this.apiURLUsers}/login`, {email, password});\n  }\n\n  // method pour le log out au dashboard\n  logout() {\n    this.token.removeItem();\n    this.router.navigate(['/login']);\n  }\n}\n","import { LocalstorageService } from './localstorage.service';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private LocalstorageToken : LocalstorageService) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const token = this.LocalstorageToken.getItem();\n    const isAPIUrl = request.url.startsWith(environment.apiURL);\n\n    if(token && isAPIUrl) {\n      request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n    \n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n\nconst TOKEN = 'jwtToken';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class LocalstorageService {\n\n  constructor() { }\n\n  setItem(data: any) {\n    localStorage.setItem(TOKEN, data);\n  }\n\n  getItem() {\n    return localStorage.getItem(TOKEN);\n  }\n\n  removeItem() {\n    localStorage.removeItem(TOKEN);\n  }\n\n  isValidToken() {\n    const token = this.getItem();\n    if (token) {\n      const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n      return !this._tokenExpired(tokenDecode.exp)\n    } else {\n      return false;\n    }\n  }\n\n  getUserIdFromToken() {\n    const token = this.getItem();\n    if (token) {\n      const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n      if (tokenDecode) {\n        return tokenDecode.userId;\n      }else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  private _tokenExpired(expiration: number): boolean {\n    return Math.floor(new Date().getTime() / 1000) >= expiration;\n  }\n}\n","import { UsersFacade } from './../state/users.facade';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, Observable } from 'rxjs';\r\nimport { User } from '../models/users';\r\nimport { environment } from '../../../../../environments/environment';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class UsersService {\r\n\r\n  apiURLUsers = environment.apiURL + 'users';\r\n\r\n\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private usersFacade: UsersFacade\r\n    ) {}\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.apiURLUsers);\r\n  }\r\n\r\n  getUser(userId: string): Observable<User> {\r\n    return this.http.get<User>(`${this.apiURLUsers}/${userId}`);\r\n  }\r\n\r\n  createUser(user: User): Observable<User> {\r\n    return this.http.post<User>(this.apiURLUsers, user);\r\n  }\r\n\r\n  updateUser(user: User): Observable<User> {\r\n    return this.http.put<User>(`${this.apiURLUsers}/${user.id}`, user);\r\n  }\r\n\r\n  deleteUser(userId: string): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiURLUsers}/${userId}`);\r\n  }\r\n\r\n  getUsersCount(): Observable<number> {\r\n    return this.http\r\n      .get<number>(`${this.apiURLUsers}/get/count`)\r\n      .pipe(map((objectValue: any) => objectValue.userCount));\r\n  }\r\n  initAppSession(){\r\n    this.usersFacade.buildUserSession();\r\n  }\r\n\r\n  observeCurrentUser(){\r\n    return this.usersFacade.currentUser$;\r\n  }\r\n\r\n  isCurrentUserIsAuth(){\r\n    return this.usersFacade.isAuthenticated$;\r\n  }\r\n}\r\n","import { createAction, props } from '@ngrx/store';\nimport { User } from '../models/users';\n\n\nexport const buildUserSession = createAction('[Users] Build User Session')\n//export const init = createAction('[Users Page] Init');\n\nexport const buildUserSessionSuccess = createAction(\n  '[Users] Build User Session Success',\n  props<{ user: User }>()\n);\n\nexport const buildUserSessionFailed = createAction('[Users] Build User Session Failed');\n","import { Injectable } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { UsersService } from '@redbits/users';\nimport { of } from 'rxjs/internal/observable/of';\nimport { catchError, concatMap, map } from 'rxjs/operators';\nimport { LocalstorageService } from '../services/localstorage.service';\nimport * as UsersActions from './users.actions';\n\n\n@Injectable()\nexport class UsersEffects {\n\n  buildUserSession$ = createEffect(() => this.actions$.pipe(\n    ofType(UsersActions.buildUserSession),\n    concatMap(() => {\n      if (this.localstorageService.isValidToken()) {\n        const userId = this.localstorageService.getUserIdFromToken()\n        if (userId) {\n          return this.usersService.getUser(userId).pipe(map((user) => {\n            return UsersActions.buildUserSessionSuccess({ user: user })\n          }),\n            catchError(() => of(UsersActions.buildUserSessionFailed()))\n          )\n        } else {\n          return of(UsersActions.buildUserSessionFailed())\n        }\n      } else {\n        return of(UsersActions.buildUserSessionFailed())\n      }\n    })\n  ))\n\n  constructor(\n    private readonly actions$: Actions,\n    private localstorageService: LocalstorageService,\n    private usersService: UsersService\n  ) { }\n}\n","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n\nimport * as UsersActions from './users.actions';\nimport * as UsersSelectors from './users.selectors';\n\n@Injectable()\nexport class UsersFacade {\n  // /**\n  //  * Combine pieces of state using createSelector,\n  //  * and expose them as observables through the facade.\n  //  */\n  // loaded$ = this.store.pipe(select(UsersSelectors.getUsersLoaded));\n  // allUsers$ = this.store.pipe(select(UsersSelectors.getAllUsers));\n  // selectedUsers$ = this.store.pipe(select(UsersSelectors.getSelected));\n\n  currentUser$ = this.store.pipe(select(UsersSelectors.getUser))\n  isAuthenticated$ = this.store.pipe(select(UsersSelectors.getUserIsAuth))\n\n  constructor(private readonly store: Store) { }\n\n\n  buildUserSession() {\n    this.store.dispatch(UsersActions.buildUserSession());\n  }\n}\n","/**\n * Interface for the 'Users' data\n */\nexport interface UsersEntity {\n  id: string | number; // Primary ID\n  name: string;\n}\n","//import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { createReducer, on, Action } from '@ngrx/store';\nimport { User } from '@redbits/users';\n\nimport * as UsersActions from './users.actions';\n//import { UsersEntity } from './users.models';\n\nexport const USERS_FEATURE_KEY = 'users';\n\nexport interface UsersState {\n  user: User,\n  isAuthenticated: boolean;\n}\n\n// export interface State extends EntityState<UsersEntity> {\n//   selectedId?: string | number; // which Users record has been selected\n//   loaded: boolean; // has the Users list been loaded\n//   error?: string | null; // last known error (if any)\n// }\n\nexport interface UsersPartialState {\n  readonly [USERS_FEATURE_KEY]: UsersState;\n}\n\nexport const initialUsersState: UsersState = {\n  user: null,\n  isAuthenticated: false,\n}\n\n// export const usersAdapter: EntityAdapter<UsersEntity> =\n//   createEntityAdapter<UsersEntity>();\n\n// export const initialState: State = usersAdapter.getInitialState({\n//   // set initial required properties\n//   loaded: false,\n// });\n\nconst usersReducer = createReducer(\n  initialUsersState,\n  on(UsersActions.buildUserSession, (state) => ({ ...state })),\n  on(UsersActions.buildUserSessionSuccess, (state, action) => ({\n    ...state,\n    user: action.user,\n    isAuthenticated: true\n  })),\n  on(UsersActions.buildUserSessionFailed, (state) => ({\n    ...state,\n    user: null,\n    isAuthenticated: false\n  }))\n)\n\n// const usersReducer = createReducer(\n//   initialState,\n//   on(UsersActions.init, (state) => ({ ...state, loaded: false, error: null })),\n//   on(UsersActions.loadUsersSuccess, (state, { users }) =>\n//     usersAdapter.setAll(users, { ...state, loaded: true })\n//   ),\n//   on(UsersActions.loadUsersFailure, (state, { error }) => ({ ...state, error }))\n// );\n\nexport function reducer(state: UsersState | undefined, action: Action) {\n  return usersReducer(state, action);\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { UsersPartialState, UsersState, USERS_FEATURE_KEY } from './users.reducer';\n\n// Lookup the 'Users' feature state managed by NgRx\nexport const getUsersState = createFeatureSelector<UsersPartialState, UsersState>(USERS_FEATURE_KEY);\n\nexport const getUser = createSelector(getUsersState, (state) => state.user);\n\nexport const getUserIsAuth = createSelector(getUsersState, (state) => state.isAuthenticated);\n// const { selectAll, selectEntities } = usersAdapter.getSelectors();\n\n// export const getUsersLoaded = createSelector(\n//   getUsersState,\n//   (state: State) => state.loaded\n// );\n\n// export const getUsersError = createSelector(\n//   getUsersState,\n//   (state: State) => state.error\n// );\n\n// export const getAllUsers = createSelector(getUsersState, (state: State) =>\n//   selectAll(state)\n// );\n\n// export const getUsersEntities = createSelector(getUsersState, (state: State) =>\n//   selectEntities(state)\n// );\n\n// export const getSelectedId = createSelector(\n//   getUsersState,\n//   (state: State) => state.selectedId\n// );\n\n// export const getSelected = createSelector(\n//   getUsersEntities,\n//   getSelectedId,\n//   (entities, selectedId) => (selectedId ? entities[selectedId] : undefined)\n// );\n","import { CardModule } from 'primeng/card';\nimport { ToastModule } from 'primeng/toast';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport * as fromUsers from './state/users.reducer';\nimport { UsersEffects } from './state/users.effects';\nimport { UsersFacade } from './state/users.facade';\nimport { RegistrationComponent } from './pages/registration/registration.component';\n\nexport const usersRoutes: Route[] = [\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'registration',\n    component: RegistrationComponent,\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(usersRoutes),\n    ButtonModule,\n    FormsModule,\n    ToastModule,\n    CardModule,\n    ReactiveFormsModule,\n    InputTextModule,\n    StoreModule.forFeature(fromUsers.USERS_FEATURE_KEY, fromUsers.reducer),\n    EffectsModule.forFeature([UsersEffects]),\n  ],\n  declarations: [LoginComponent, RegistrationComponent],\n  providers: [UsersFacade],\n})\nexport class UsersModule {}\n"],"names":[],"sourceRoot":"webpack:///"}